generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["commerce", "media", "public", "salesportal", "security", "user"]
}

model SalCompany {
  id                   Int                    @id @default(autoincrement())
  name                 String                 @db.VarChar(255)
  document             String                 @unique(map: "idxsalesportalsalcompanydocument") @db.VarChar(30)
  description          String                 @db.VarChar(250)
  contactName          String?                @db.VarChar(50)
  contactPhoneNbr      String?                @db.VarChar(50)
  logoImagePath        String?                @db.VarChar(255)
  addrZipCode          String                 @db.VarChar(30)
  addrStreet           String                 @db.VarChar(255)
  addrNbr              String                 @db.VarChar(20)
  addrComplement       String?                @db.VarChar(255)
  addrDistrict         String                 @db.VarChar(255)
  addrCity             String                 @db.VarChar(255)
  toSysCode            Int?
  externalId           Int?
  isActive             Boolean                @default(true)
  blameUser            String?                @db.VarChar(100)
  createdAt            DateTime?              @default(now()) @db.Timestamptz(6)
  updatedAt            DateTime               @updatedAt @db.Timestamptz(6)
  addrCountry          String                 @db.VarChar(50)
  addrState            String                 @db.VarChar(30)
  migrationStatus      String?                @default("finished") @db.VarChar(16)
  SalCompanyCredential SalCompanyCredential[]
  SalEmployee          SalEmployee[]
  SalEmployeeGroup     SalEmployeeGroup[]
  SalImportFile        SalImportFile[]
  SalImportFileLine    SalImportFileLine[]
  SalOrder             SalOrder[]
  SalOrderItem         SalOrderItem[]

  @@schema("salesportal")
}

model SalCompanyCredential {
  id           Int        @id(map: "SalCredentialId_pkey") @default(autoincrement())
  salCompanyId Int
  secUserId    Int
  SalCompany   SalCompany @relation(fields: [salCompanyId], references: [id], map: "SalesPortal_salCompanyId_fkey")
  SecUser      SecUser    @relation(fields: [secUserId], references: [id], map: "SecUserId_secUserId_fkey")
  sal_employeegroupid        Int?
  SalEmployeeGroup SalEmployeeGroup? @relation(fields: [sal_employeegroupid], references: [id])
  scc_isactive Boolean @default(true)


  @@unique([salCompanyId, secUserId])
  @@schema("salesportal")
}

model SalImportFile {
  id                         Int                       @id @default(autoincrement())
  salCompanyId               Int
  fileName                   String                    @db.VarChar(255)
  fileType                   FileType
  isProcessed                Boolean
  isSuccess                  Boolean
  blameUser                  String?                   @db.VarChar(100)
  createdAt                  DateTime?                 @default(now())
  updatedAt                  DateTime                  @updatedAt
  errorMessage               String?                   @db.VarChar(400)
  salOrderDeliveryLocationId Int?
  errorMessageDetail         String?                   @db.VarChar(400)
  SalCompany                 SalCompany                @relation(fields: [salCompanyId], references: [id], map: "SalImportFile_empCompanyId_fkey")
  SalOrderDeliveryLocation   SalOrderDeliveryLocation? @relation(fields: [salOrderDeliveryLocationId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_salorder_deliverylocation")
  SalImportFileLine          SalImportFileLine[]
  SalOrder                   SalOrder[]
  sal_employeegroupid        Int?
  SalEmployeeGroup SalEmployeeGroup? @relation(fields: [sal_employeegroupid], references: [id])

  @@schema("salesportal")
}

model SalImportFileLine {
  id              Int           @id @default(autoincrement())
  salImportFileId Int
  salCompanyId    Int
  content         String
  isProcessed     Boolean
  isSuccess       Boolean
  errorMsg        String?
  processDate     DateTime?     @db.Timestamptz(6)
  blameUser       String?       @db.VarChar(100)
  createdAt       DateTime?     @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime      @updatedAt @db.Timestamptz(6)
  lineNumber      Int
  SalCompany      SalCompany    @relation(fields: [salCompanyId], references: [id], map: "SalImportFileLine_empCompanyId_fkey")
  SalImportFile   SalImportFile @relation(fields: [salImportFileId], references: [id], map: "SalImportFileLine_empImportFileId_fkey")
  sal_employeegroupid        Int?
  SalEmployeeGroup SalEmployeeGroup? @relation(fields: [sal_employeegroupid], references: [id])

  @@schema("salesportal")
}

model SalOrder {
  id                         Int                       @id @default(autoincrement())
  salCompanyId               Int
  date                       DateTime                  @db.Timestamptz(6)
  totalValue                 Int
  adminTax                   Int
  isPaid                     Boolean
  paymentDate                DateTime?                 @db.Timestamptz(6)
  isReleased                 Boolean
  releaseDate                DateTime?                 @db.Timestamptz(6)
  cancelDate                 DateTime?                 @db.Timestamptz(6)
  cancelUser                 String?
  isActive                   Boolean
  orderType                  OrderType
  salImportFileId            Int?
  billetFilePath             String?
  paymentTransferCode        String?
  toSysCode                  Int?
  externalId                 Int?
  blameUser                  String?
  createdAt                  DateTime?                 @default(now()) @db.Timestamptz(6)
  updatedAt                  DateTime                  @updatedAt @db.Timestamptz(6)
  paymentMode                PaymentMode?
  status                     OrderStatus               @default(new)
  isProcessed                Boolean                   @default(false)
  processMessage             String?
  salOrderDeliveryLocationId Int?
  sal_employeegroupid        Int?
  SalCompany                 SalCompany                @relation(fields: [salCompanyId], references: [id])
  SalImportFile              SalImportFile?            @relation(fields: [salImportFileId], references: [id])
  SalOrderDeliveryLocation   SalOrderDeliveryLocation? @relation(fields: [salOrderDeliveryLocationId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_salorder_deliverylocation")
  SalOrderItem               SalOrderItem[]
  SalEmployeeGroup SalEmployeeGroup? @relation(fields: [sal_employeegroupid], references: [id])

  @@schema("salesportal")
}

model SalOrderItem {
  id            Int         @id @default(autoincrement())
  salOrderId    Int
  salCompanyId  Int
  salEmployeeId Int
  value         Int
  externalId    Int?
  cardNumber    String?     @db.VarChar(16)
  SalCompany    SalCompany  @relation(fields: [salCompanyId], references: [id], map: "SalOrderItem_empCompanyId_fkey")
  SalOrder      SalOrder    @relation(fields: [salOrderId], references: [id], map: "SalOrderItem_orderId_fkey")
  SalEmployee   SalEmployee @relation(fields: [salEmployeeId], references: [id], map: "SalOrderItem_usrUserId_fkey")

  @@unique([salOrderId, salEmployeeId], map: "iuniqueorder")
  @@schema("salesportal")
}

model SalAd {
  id          Int     @id(map: "SalesPortalAd_pkey") @default(autoincrement())
  label       String  @db.VarChar(200)
  description String  @db.VarChar(600)
  imgPath     String  @db.VarChar(255)
  type        String? @db.VarChar(16)

  @@map("SalAd")
  @@schema("salesportal")
}

model SecUser {
  id                    Int                    @id(map: "SecUserId_pkey") @default(autoincrement())
  name                  String                 @db.VarChar(50)
  email                 String                 @unique(map: "secuniqueindexsecuser") @db.VarChar(50)
  password              String                 @db.VarChar(255)
  document              String                 @unique(map: "secuniquedocumentsecuser") @db.VarChar(100)
  photoPath             String?                @db.VarChar(200)
  uuid                  String?                @db.Uuid
  isAdmin               Boolean
  isSalesPortal         Boolean
  isApp                 Boolean
  reset                 Boolean
  isActive              Boolean                @default(true)
  blameUser             String?                @db.VarChar(100)
  createdAt             DateTime?              @default(now()) @db.Timestamptz(6)
  updatedAt             DateTime               @updatedAt @db.Timestamptz(6)
  lastLoginDate         DateTime?              @db.Timestamptz(6)
  code                  Decimal?               @db.Decimal(6, 0)
  externalExpoPushToken String?                @db.VarChar(50)
  newemail              String?                @db.VarChar(50)
  SalCompanyCredential  SalCompanyCredential[]

  @@schema("security")
}

model sec_useraccesslog {
  sual_id                       Int       @id @default(autoincrement())
  sec_secuserid                 Int
  sual_logintime                DateTime? @db.Timestamptz
  sual_is_successful            Boolean   @default(true)
  sual_failure_reason           String?
  sual_createdat                DateTime  @default(now()) @db.Timestamptz
  sual_updatedat                DateTime? @default(now()) @db.Timestamptz
  sual_blameuser                String
  sual_ismasterpasslogin        Boolean?
  sual_istransparentlogin       Boolean?
  sual_transparentloginisconfirmed Boolean?

  @@schema("security")
} 

model UsrEmployee {
  id                Int             @id(map: "UsrEmployee_pkey2") @default(autoincrement())
  usrUserId         Int
  usrOrganizationId Int
  admissionDate     DateTime?       @map("admissionDate") @db.Date
  resignDate        DateTime?       @map("resignDate") @db.Date
  position          String?         @map("position")
  isActive          Boolean         @default(true) @map("isActive")
  blameUser         String          @map("blameUser")
  createdAt         DateTime        @default(now()) @map("createdAt")
  updatedAt         DateTime        @map("updatedAt")
  comment           String?         @map("comment")
  externalId        Int?            @unique(map: "UsrEmployee2_externalId_key") @map("externalId")
  qtdDayUser        Int?            @map("qtdDayUser")
  UsrOrganization   UsrOrganization @relation(fields: [usrOrganizationId], references: [id], map: "UsrEmployee2_usrOrganizationId_fkey")
  UsrUser           UsrUser         @relation(fields: [usrUserId], references: [id], onDelete: Cascade, map: "UsrEmployee2_usrUserId_fkey")

  @@index([id, usrUserId, usrOrganizationId], map: "usremployee2_id_idx")
  @@map("UsrEmployee")
  @@schema("user")
}

model UsrOrganization {
  id                                                                                 Int                       @id @default(autoincrement())
  name                                                                               String                    @map("name")
  shortName                                                                          String                    @map("shortName")
  mailAddress                                                                        String?                   @map("mailAddress")
  types                                                                              OrganizationType[]
  usrMainOrganizationDocumentId                                                      Int?                      @unique @map("usrMainOrganizationDocumentId")
  usrMainOrganizationPhoneId                                                         Int?                      @unique @map("usrMainOrganizationPhoneId")
  usrMainOrganizationAddressId                                                       Int?                      @unique @map("usrMainOrganizationAddressId")
  isActive                                                                           Boolean                   @default(true) @map("isActive")
  blameUser                                                                          String                    @map("blameUser")
  createdAt                                                                          DateTime                  @default(now()) @map("createdAt")
  updatedAt                                                                          DateTime                  @map("updatedAt")
  clientId                                                                           String?                   @map("clientId")
  sysGroupId                                                                         Int?                      @map("sysGroupId")
  toTransportOperatorId                                                              Int?                      @map("toTransportOperatorId")
  externalId                                                                         Int?                      @unique @map("externalId")
  paymentSecret                                                                      String?
  UsrEmployee                                                                        UsrEmployee[]
  UsrEmployee_old                                                                    UsrEmployee_old[]
  UsrOrganizationAddress                                                             UsrOrganizationAddress?   @relation(fields: [usrMainOrganizationAddressId], references: [id])
  UsrOrganizationDocument                                                            UsrOrganizationDocument?  @relation(fields: [usrMainOrganizationDocumentId], references: [id])
  UsrOrganizationPhone                                                               UsrOrganizationPhone?     @relation(fields: [usrMainOrganizationPhoneId], references: [id])
  UsrOrganizationAddress_UsrOrganizationAddress_usrOrganizationIdToUsrOrganization   UsrOrganizationAddress[]  @relation("UsrOrganizationAddress_usrOrganizationIdToUsrOrganization")
  UsrOrganizationDocument_UsrOrganizationDocument_usrOrganizationIdToUsrOrganization UsrOrganizationDocument[] @relation("UsrOrganizationDocument_usrOrganizationIdToUsrOrganization")
  UsrOrganizationGroup                                                               UsrOrganizationGroup[]
  UsrOrganizationPhone_UsrOrganizationPhone_usrOrganizationIdToUsrOrganization       UsrOrganizationPhone[]    @relation("UsrOrganizationPhone_usrOrganizationIdToUsrOrganization")
  UsrStudent                                                                         UsrStudent[]

  @@map("UsrOrganization")
  @@schema("user")
}

model UsrOrganizationAddress {
  id                                                                        Int                   @id @default(autoincrement())
  type                                                                      AddressType           @map("type")
  street                                                                    String                @map("street")
  number                                                                    String                @map("number")
  complement                                                                String?               @map("complement")
  zipCode                                                                   String                @map("zipCode")
  location                                                                  Unsupported("point")? @map("location")
  usrOrganizationId                                                         Int                   @map("usrOrganizationId")
  isActive                                                                  Boolean               @default(true) @map("isActive")
  blameUser                                                                 String                @map("blameUser")
  createdAt                                                                 DateTime              @default(now()) @map("createdAt")
  updatedAt                                                                 DateTime              @map("updatedAt")
  isMain                                                                    Boolean?              @map("isMain")
  city                                                                      String?               @map("city")
  district                                                                  String?               @map("district")
  country                                                                   String?               @map("country")
  state                                                                     String?               @map("state")
  UsrOrganization                                                           UsrOrganization?
  UsrOrganization_UsrOrganizationAddress_usrOrganizationIdToUsrOrganization UsrOrganization       @relation("UsrOrganizationAddress_usrOrganizationIdToUsrOrganization", fields: [usrOrganizationId], references: [id], onDelete: Cascade)

  @@map("UsrOrganizationAddress")
  @@schema("user")
}

model UsrOrganizationDocument {
  id                                                                         Int              @id @default(autoincrement())
  usrOrganizationId                                                          Int              @map("usrOrganizationId")
  value                                                                      String           @map("value")
  expirationDate                                                             DateTime?        @map("expirationDate") @db.Date
  complement                                                                 String?          @map("complement")
  isActive                                                                   Boolean          @default(true) @map("isActive")
  blameUser                                                                  String           @map("blameUser")
  createdAt                                                                  DateTime         @default(now()) @map("createdAt")
  updatedAt                                                                  DateTime         @map("updatedAt")
  expeditionDate                                                             DateTime?        @map("expeditionDate") @db.Date
  usrDocumentTypeId                                                          Int              @map("usrDocumentTypeId")
  filenames                                                                  String[]         @map("filenames")
  presignUrls                                                                String[]         @map("presignUrls")
  UsrOrganization                                                            UsrOrganization?
  UsrDocumentType                                                            UsrDocumentType  @relation(fields: [usrDocumentTypeId], references: [id])
  UsrOrganization_UsrOrganizationDocument_usrOrganizationIdToUsrOrganization UsrOrganization  @relation("UsrOrganizationDocument_usrOrganizationIdToUsrOrganization", fields: [usrOrganizationId], references: [id], onDelete: Cascade)

  @@unique([usrOrganizationId, usrDocumentTypeId])
  @@map("UsrOrganizationDocument")
  @@schema("user")
}

model UsrDocumentType {
  id                             Int                       @id @default(autoincrement())
  description                    String                    @unique @map("description")
  role                           DocumentRole              @map("role")
  isUnique                       Boolean                   @default(false) @map("isUnique")
  isMain                         Boolean                   @default(false) @map("isMain")
  formatMask                     String?                   @map("formatMask")
  regexValidation                String?                   @map("regexValidation")
  isExpirationRequired           Boolean                   @default(false) @map("isExpirationRequired")
  isComplementRequired           Boolean                   @default(false) @map("isComplementRequired")
  complementCaption              String?                   @map("complementCaption")
  isActive                       Boolean                   @default(true) @map("isActive")
  blameUser                      String                    @map("blameUser")
  createdAt                      DateTime                  @default(now()) @map("createdAt")
  updatedAt                      DateTime                  @map("updatedAt")
  UsrRequiredByOrganizationTypes OrganizationType[]        @map("UsrRequiredByOrganizationTypes")
  isExpeditionRequired           Boolean                   @default(false) @map("isExpeditionRequired")
  isPhotoRequired                Boolean                   @default(false) @map("isPhotoRequired")
  priority                       Int?                      @map("priority")
  externalId                     Int?                      @unique @map("externalId")
  UsrDisabilityAttendant         UsrDisabilityAttendant[]
  UsrDocument                    UsrDocument[]
  UsrOrganizationDocument        UsrOrganizationDocument[]
  UsrType                        UsrType[]                 @relation("UsrDocumentType_UsrType_IsRequired")

  @@unique([role, priority])
  @@map("UsrDocumentType")
  @@schema("user")
}

model UsrOrganizationPhone {
  id                                                                      Int              @id @default(autoincrement())
  countryCode                                                             Int              @map("countryCode")
  number                                                                  String           @map("number")
  contactInfo                                                             String?          @map("contactInfo")
  usrOrganizationId                                                       Int              @map("usrOrganizationId")
  isActive                                                                Boolean          @default(true) @map("isActive")
  blameUser                                                               String           @map("blameUser")
  createdAt                                                               DateTime         @default(now()) @map("createdAt")
  updatedAt                                                               DateTime         @map("updatedAt")
  isMain                                                                  Boolean?         @map("isMain")
  channels                                                                PhoneChannel[]   @map("channels")
  type                                                                    PhoneType?       @map("type")
  UsrOrganization                                                         UsrOrganization?
  UsrOrganization_UsrOrganizationPhone_usrOrganizationIdToUsrOrganization UsrOrganization  @relation("UsrOrganizationPhone_usrOrganizationIdToUsrOrganization", fields: [usrOrganizationId], references: [id], onDelete: Cascade)

  @@map("UsrOrganizationPhone")
  @@schema("user")
}

model UsrUser {
  id                                         Int                      @id @default(autoincrement())
  name                                       String                   @map("name")
  socialName                                 String?                  @map("socialName")
  birthdate                                  DateTime                 @map("birthdate") @db.Date
  gender                                     Gender                   @map("gender")
  motherName                                 String?                  @map("motherName")
  fatherName                                 String?                  @map("fatherName")
  mailAddress                                String?                  @map("mailAddress")
  usrMainDocumentId                          Int?                     @unique @map("usrMainDocumentId")
  usrMainPhoneId                             Int?                     @unique @map("usrMainPhoneId")
  usrMainAddressId                           Int?                     @unique @map("usrMainAddressId")
  isActive                                   Boolean                  @default(true) @map("isActive")
  blameUser                                  String                   @map("blameUser")
  createdAt                                  DateTime                 @default(now()) @map("createdAt")
  updatedAt                                  DateTime                 @map("updatedAt")
  hash                                       String?                  @map("hash")
  usrMainPhotoId                             Int?                     @unique @map("usrMainPhotoId")
  aggregatedData                             String?                  @map("aggregatedData")
  isOperator                                 Boolean                  @default(false) @map("isOperator")
  externalId                                 Int?                     @unique @map("externalId")
  legacyId                                   Int?                     @map("legacyId")
  filiation1                                 String?                  @map("filiation1")
  filiation2                                 String?                  @map("filiation2")
  isLocked                                   Boolean                  @default(false) @map("isLocked")
  statusCheckDate                            DateTime?                @map("statusCheckDate")
  usrStatusCode                              Int?                     @map("usrStatusCode")
  usrMainCommentId                           Int?                     @unique @map("usrMainCommentId")
  paymentSecret                              String?
  nationality                                String?
  maritalStatus                              MaritalStatus?
  familyIncome                               Int?
  personalIncome                             Int?
  UsrAddress_UsrAddress_usrUserIdToUsrUser   UsrAddress[]             @relation("UsrAddress_usrUserIdToUsrUser")
  UsrComment_UsrComment_usrUserIdToUsrUser   UsrComment[]             @relation("UsrComment_usrUserIdToUsrUser")
  UsrDisability                              UsrDisability[]
  UsrDisabilityAttendant                     UsrDisabilityAttendant[]
  UsrDocument_UsrDocument_usrUserIdToUsrUser UsrDocument[]            @relation("UsrDocument_usrUserIdToUsrUser")
  UsrElderly                                 UsrElderly[]
  UsrEmployee                                UsrEmployee[]
  UsrEmployee_old                            UsrEmployee_old[]
  UsrOperator                                UsrOperator[]
  UsrPhone_UsrPhone_usrUserIdToUsrUser       UsrPhone[]               @relation("UsrPhone_usrUserIdToUsrUser")
  UsrPhoto_UsrPhoto_usrUserIdToUsrUser       UsrPhoto[]               @relation("UsrPhoto_usrUserIdToUsrUser")
  UsrStudent                                 UsrStudent[]
  UsrAddress                                 UsrAddress?              @relation(fields: [usrMainAddressId], references: [id])
  UsrComment                                 UsrComment?              @relation(fields: [usrMainCommentId], references: [id])
  UsrDocument                                UsrDocument?             @relation(fields: [usrMainDocumentId], references: [id])
  UsrPhone                                   UsrPhone?                @relation(fields: [usrMainPhoneId], references: [id])
  UsrPhoto                                   UsrPhoto?                @relation(fields: [usrMainPhotoId], references: [id])
  UsrStatus                                  UsrStatus?               @relation(fields: [usrStatusCode], references: [code])
  UsrUserHistory                             UsrUserHistory[]
  UsrUserTag                                 UsrUserTag[]
  UsrType                                    UsrType[]                @relation("UsrTypeToUsrUser")

  @@index([aggregatedData(ops: raw("gist_trgm_ops"))], type: Gist)
  @@index([usrMainAddressId], map: "idx_usrMainAddressId")
  @@index([usrMainCommentId], map: "idx_usrMainCommentId")
  @@index([usrMainDocumentId], map: "idx_usrMainDocumentId")
  @@index([usrMainPhoneId], map: "idx_usrMainPhoneId")
  @@index([usrMainPhotoId], map: "idx_usrMainPhotoId")
  @@map("UsrUser")
  @@schema("user")
}

model UsrStatus {
  code        Int       @id
  description String    @map("description")
  isAllowed   Boolean   @map("isAllowed")
  blameUser   String    @map("blameUser")
  createdAt   DateTime  @default(now()) @map("createdAt")
  updatedAt   DateTime  @map("updatedAt")
  UsrUser     UsrUser[]

  @@map("UsrStatus")
  @@schema("user")
}

model UsrAddress {
  id                                    Int         @id @default(autoincrement())
  type                                  AddressType @map("type")
  street                                String      @map("street")
  number                                String      @map("number")
  complement                            String?     @map("complement")
  zipCode                               String      @map("zipCode")
  city                                  String      @map("city")
  state                                 String      @map("state")
  country                               String      @map("country")
  usrUserId                             Int         @map("usrUserId")
  isActive                              Boolean     @default(true) @map("isActive")
  blameUser                             String      @map("blameUser")
  createdAt                             DateTime    @default(now()) @map("createdAt")
  updatedAt                             DateTime    @map("updatedAt")
  district                              String      @map("district")
  isMain                                Boolean?    @map("isMain")
  externalId                            Int?        @unique @map("externalId")
  UsrUser_UsrAddress_usrUserIdToUsrUser UsrUser     @relation("UsrAddress_usrUserIdToUsrUser", fields: [usrUserId], references: [id], onDelete: Cascade)
  UsrUser                               UsrUser?

  @@index([usrUserId, street, number], map: "idxtemp_address")
  @@map("UsrAddress")
  @@schema("user")
}

model UsrComment {
  id                                    Int      @id @default(autoincrement())
  usrUserId                             Int      @map("usrUserId")
  comment                               String   @map("comment")
  blameUser                             String   @map("blameUser")
  createdAt                             DateTime @default(now()) @map("createdAt")
  updatedAt                             DateTime @map("updatedAt")
  UsrUser_UsrComment_usrUserIdToUsrUser UsrUser  @relation("UsrComment_usrUserIdToUsrUser", fields: [usrUserId], references: [id], onDelete: Cascade)
  UsrUser                               UsrUser?

  @@map("UsrComment")
  @@schema("user")
}

model UsrDocument {
  id                                     Int             @id @default(autoincrement())
  usrUserId                              Int             @map("usrUserId")
  value                                  String          @map("value")
  expirationDate                         DateTime?       @map("expirationDate") @db.Date
  complement                             String?         @map("complement")
  isActive                               Boolean         @default(true) @map("isActive")
  blameUser                              String          @map("blameUser")
  createdAt                              DateTime        @default(now()) @map("createdAt")
  updatedAt                              DateTime        @map("updatedAt")
  usrDocumentTypeId                      Int             @map("usrDocumentTypeId")
  expeditionDate                         DateTime?       @map("expeditionDate") @db.Date
  presignUrls                            String[]        @map("presignUrls")
  filenames                              String[]        @map("filenames")
  externalId                             Int?            @unique @map("externalId")
  valueUnique                            String?         @map("valueUnique")
  UsrDocumentType                        UsrDocumentType @relation(fields: [usrDocumentTypeId], references: [id])
  UsrUser_UsrDocument_usrUserIdToUsrUser UsrUser         @relation("UsrDocument_usrUserIdToUsrUser", fields: [usrUserId], references: [id], onDelete: Cascade)
  UsrUser                                UsrUser?

  @@unique([usrUserId, usrDocumentTypeId])
  @@unique([valueUnique, usrDocumentTypeId])
  @@map("UsrDocument")
  @@schema("user")
}

model UsrPhone {
  id                                  Int            @id @default(autoincrement())
  type                                PhoneType      @map("type")
  countryCode                         Int            @map("countryCode")
  number                              String         @map("number")
  usrUserId                           Int            @map("usrUserId")
  isActive                            Boolean        @default(true) @map("isActive")
  blameUser                           String         @map("blameUser")
  createdAt                           DateTime       @default(now()) @map("createdAt")
  updatedAt                           DateTime       @map("updatedAt")
  channels                            PhoneChannel[] @map("channels")
  contact                             String?        @map("contact")
  isMain                              Boolean?       @map("isMain")
  externalId                          Int?           @unique @map("externalId")
  UsrUser_UsrPhone_usrUserIdToUsrUser UsrUser        @relation("UsrPhone_usrUserIdToUsrUser", fields: [usrUserId], references: [id], onDelete: Cascade)
  UsrUser                             UsrUser?

  @@index([usrUserId, number], map: "idxtemp_phone")
  @@map("UsrPhone")
  @@schema("user")
}

model UsrPhoto {
  id                                  Int       @id @default(autoincrement())
  type                                PhotoType @map("type")
  isActive                            Boolean   @default(true) @map("isActive")
  blameUser                           String    @map("blameUser")
  createdAt                           DateTime  @default(now()) @map("createdAt")
  updatedAt                           DateTime  @map("updatedAt")
  filename                            String    @map("filename")
  usrUserId                           Int       @map("usrUserId")
  presignUrl                          String?   @map("presignUrl")
  isMain                              Boolean?  @map("isMain")
  externalId                          Int?      @unique @map("externalId")
  UsrUser_UsrPhoto_usrUserIdToUsrUser UsrUser   @relation("UsrPhoto_usrUserIdToUsrUser", fields: [usrUserId], references: [id], onDelete: Cascade)
  UsrUser                             UsrUser?

  @@unique([usrUserId, filename])
  @@map("UsrPhoto")
  @@schema("user")
}

model ComCashflow {
  guid                String            @id
  comServiceGuid      String
  comCashflowReasonId Int
  date                DateTime
  amount              Int
  blameUser           String?
  createdAt           DateTime?         @default(now())
  updatedAt           DateTime
  ComCashflowReason   ComCashflowReason @relation(fields: [comCashflowReasonId], references: [id])
  ComService          ComService        @relation(fields: [comServiceGuid], references: [guid])

  @@index([guid, createdAt])
  @@schema("commerce")
}

model ComCashflowReason {
  id          Int           @id @default(autoincrement())
  description String
  type        FlowType
  isActive    Boolean       @default(true)
  blameUser   String?
  createdAt   DateTime?     @default(now())
  updatedAt   DateTime
  ComCashflow ComCashflow[]

  @@index([id, type])
  @@schema("commerce")
}

model ComCommerceChannel {
  id                         Int                          @id @default(autoincrement())
  description                String
  type                       CommerceChannelType
  channelId                  Int?
  processingCode             Int?
  receivingNet               Int?
  transmitingNet             Int?
  isDefault                  Boolean                      @default(false)
  isActive                   Boolean                      @default(true)
  blameUser                  String
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime
  ComCommerceChannelTerminal ComCommerceChannelTerminal[]

  @@schema("commerce")
}

model ComCommerceChannelTerminal {
  id                    Int                @id @default(autoincrement())
  comCommerceChannelId  Int
  toTerminalGroupId     Int?
  toTransportOperatorId Int?
  toTerminalCode        Int?
  isActive              Boolean            @default(true)
  blameUser             String
  createdAt             DateTime           @default(now())
  updatedAt             DateTime
  ComCommerceChannel    ComCommerceChannel @relation(fields: [comCommerceChannelId], references: [id])

  @@unique([toTerminalCode, toTerminalGroupId, toTransportOperatorId, comCommerceChannelId])
  @@schema("commerce")
}

model ComExternalTransactionDetail {
  id               Int            @id @default(autoincrement())
  answerNsu        BigInt?        @unique
  askRequest       Json?
  askResponse      Json?
  endRequest       Json?
  endResponse      Json?
  comTransactionId Int            @unique
  askNsu           BigInt         @unique
  blameUser        String
  createdAt        DateTime       @default(now())
  endNsu           BigInt?
  updatedAt        DateTime
  askAnswerCode    Int?
  endAnswerCode    Int?
  ComTransaction   ComTransaction @relation(fields: [comTransactionId], references: [id])

  @@schema("commerce")
}

model ComInvoice {
  id                   Int                    @id @default(autoincrement())
  value                Int
  isProcessed          Boolean                @default(false)
  dueDate              DateTime
  paymentDate          DateTime?
  comMerchantId        Int
  comPaymentModeId     Int
  cancelDate           DateTime?
  isActive             Boolean                @default(true)
  isPaid               Boolean                @default(false)
  blameUser            String
  createdAt            DateTime               @default(now())
  updatedAt            DateTime
  comSubscriptionId    Int
  ComMerchant          ComMerchant            @relation(fields: [comMerchantId], references: [id])
  ComPaymentMode       ComPaymentMode         @relation(fields: [comPaymentModeId], references: [id])
  ComSubscription      ComSubscription        @relation(fields: [comSubscriptionId], references: [id])
  ComInvoicePayment    ComInvoicePayment?
  ComRechargeOrder     ComRechargeOrder[]
  ComRechargeOrder_new ComRechargeOrder_new[]

  @@index([comMerchantId])
  @@schema("commerce")
}

model ComInvoicePayment {
  id           Int        @id @default(autoincrement())
  externalId   Int?
  authCode     String?
  comInvoiceId Int        @unique
  dueDate      DateTime
  paymentDate  DateTime?
  cancelDate   DateTime?
  isProcessed  Boolean    @default(false)
  isActive     Boolean    @default(true)
  blameUser    String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime
  ComInvoice   ComInvoice @relation(fields: [comInvoiceId], references: [id])

  @@index([comInvoiceId])
  @@schema("commerce")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ComMerchant {
  id                             Int                              @id @default(autoincrement())
  name                           String                           @unique
  type                           MerchantType
  clientId                       String?                          @unique
  isActive                       Boolean                          @default(true)
  toTransportOperatorId          Int
  blameUser                      String
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime
  allowedUsrTypeIds              Int[]
  comRechargeOrderTaxId          Int?
  comSubscriptionId              Int?
  usrOrganizationId              Int?
  clientSecret                   String?
  ComInvoice                     ComInvoice[]
  ComRechargeOrderTax            ComRechargeOrderTax?             @relation(fields: [comRechargeOrderTaxId], references: [id])
  ComSubscription                ComSubscription?                 @relation(fields: [comSubscriptionId], references: [id])
  ComMerchantAccount             commerce_ComMerchantAccount?
  ComMerchantProduct             ComMerchantProduct[]
  ComMerchantProductRestriction  ComMerchantProductRestriction[]
  ComMerchantWebHook             ComMerchantWebHook[]
  ComPaymentModeRestriction      ComPaymentModeRestriction[]
  ComPaymentModeRule             ComPaymentModeRule[]
  ComProductPaymentRestriction   ComProductPaymentRestriction[]
  ComRechargeOrder               ComRechargeOrder[]
  ComRechargeOrder_new           ComRechargeOrder_new[]
  ComService                     ComService[]
  ComTerminalFunctionRestriction ComTerminalFunctionRestriction[]
  ComTransactionSummary          ComTransactionSummary[]
  ComPaymentMode                 ComPaymentMode[]                 @relation("ComMerchantToComPaymentMode")
  ComTerminalFunction            ComTerminalFunction[]            @relation("ComMerchantToComTerminalFunction")

  @@schema("commerce")
}

model commerce_ComMerchantAccount {
  id                                 Int                                           @id @default(autoincrement())
  comMerchantId                      Int                                           @unique
  balance                            BigInt                                        @default(0)
  gsn                                Int                                           @default(0)
  blameUser                          String
  createdAt                          DateTime                                      @default(now())
  updatedAt                          DateTime
  ComMerchant                        ComMerchant                                   @relation(fields: [comMerchantId], references: [id])
  ComMerchantAccountCreditGeneration commerce_ComMerchantAccountCreditGeneration[]
  ComMerchantAccountSummary          commerce_ComMerchantAccountSummary[]
  ComMerchantAccountTransaction      ComMerchantAccountTransaction[]

  @@index([comMerchantId], type: Hash)
  @@map("ComMerchantAccount")
  @@schema("commerce")
}

model commerce_ComMerchantAccountCreditGeneration {
  id                            Int                            @id @default(autoincrement())
  comMerchantAccountId          Int
  value                         BigInt
  date                          DateTime                       @default(now())
  gsn                           Int
  generationUser                String
  blameUser                     String
  createdAt                     DateTime                       @default(now())
  updatedAt                     DateTime
  ComMerchantAccount            commerce_ComMerchantAccount    @relation(fields: [comMerchantAccountId], references: [id])
  ComMerchantAccountTransaction ComMerchantAccountTransaction?

  @@unique([comMerchantAccountId, gsn])
  @@index([comMerchantAccountId, gsn])
  @@map("ComMerchantAccountCreditGeneration")
  @@schema("commerce")
}

model commerce_ComMerchantAccountSummary {
  id                   Int                         @id @default(autoincrement())
  date                 DateTime                    @db.Date
  comMerchantAccountId Int
  totalCredit          BigInt                      @default(0)
  totalDebit           BigInt                      @default(0)
  blameUser            String
  createdAt            DateTime                    @default(now())
  updatedAt            DateTime
  creditCount          Int                         @default(0)
  debitCount           Int                         @default(0)
  ComMerchantAccount   commerce_ComMerchantAccount @relation(fields: [comMerchantAccountId], references: [id])

  @@unique([date, comMerchantAccountId])
  @@index([date, comMerchantAccountId])
  @@map("ComMerchantAccountSummary")
  @@schema("commerce")
}

model ComMerchantAccountTransaction {
  id                                 Int                                          @id @default(autoincrement())
  comMerchantAccountId               Int
  date                               DateTime                                     @default(now())
  value                              BigInt
  type                               FlowType
  comTransactionId                   Int?                                         @unique
  blameUser                          String
  createdAt                          DateTime                                     @default(now())
  updatedAt                          DateTime
  comAccountCreditGenId              Int?                                         @unique
  comRechargeOrderId                 Int?                                         @unique
  ComMerchantAccountCreditGeneration commerce_ComMerchantAccountCreditGeneration? @relation(fields: [comAccountCreditGenId], references: [id])
  ComMerchantAccount                 commerce_ComMerchantAccount                  @relation(fields: [comMerchantAccountId], references: [id])
  ComRechargeOrder                   ComRechargeOrder?                            @relation(fields: [comRechargeOrderId], references: [id])
  ComTransaction                     ComTransaction?                              @relation(fields: [comTransactionId], references: [id])

  @@index([comAccountCreditGenId], type: Hash)
  @@index([comMerchantAccountId], type: Hash)
  @@index([comRechargeOrderId], type: Hash)
  @@index([comTransactionId], type: Hash)
  @@schema("commerce")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ComMerchantCommision {
  id                   Int                @id @default(autoincrement())
  comMerchantProductId Int
  startDate            DateTime           @db.Date
  endDate              DateTime?          @db.Date
  operationType        OperationType
  type                 CommisionType
  value                Int
  blameUser            String
  createdAt            DateTime           @default(now())
  updatedAt            DateTime
  ComMerchantProduct   ComMerchantProduct @relation(fields: [comMerchantProductId], references: [id], onDelete: Cascade)

  @@schema("commerce")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ComMerchantProduct {
  id                            Int                             @id @default(autoincrement())
  comMerchantId                 Int
  type_old                      String?
  subType                       Int
  operationTypes                OperationType[]
  dayTransactionLimit           Int?
  dayTransactionValue           Int?
  weekTransactionLimit          Int?
  weekTransactionValue          Int?
  monthTransactionLimit         Int?
  monthTransactionValue         Int?
  isActive                      Boolean                         @default(true)
  blameUser                     String
  createdAt                     DateTime                        @default(now())
  updatedAt                     DateTime
  endDate                       DateTime?
  startDate                     DateTime                        @default(now())
  type                          MediaType
  ComMerchantCommision          ComMerchantCommision[]
  ComMerchant                   ComMerchant                     @relation(fields: [comMerchantId], references: [id])
  ComMerchantProductRestriction ComMerchantProductRestriction[]
  ComProductPaymentRestriction  ComProductPaymentRestriction[]
  ComTransaction                ComTransaction[]

  @@unique([comMerchantId, type, subType])
  @@index([comMerchantId], type: Hash)
  @@index([comMerchantId, type, subType])
  @@schema("commerce")
}

model ComMerchantProductRestriction {
  id                   Int                @id @default(autoincrement())
  comMerchantId        Int
  toTerminalGroupId    Int
  comMerchantProductId Int
  blameUser            String
  createdAt            DateTime           @default(now())
  updatedAt            DateTime
  isActive             Boolean            @default(true)
  ComMerchant          ComMerchant        @relation(fields: [comMerchantId], references: [id], onDelete: Cascade)
  ComMerchantProduct   ComMerchantProduct @relation(fields: [comMerchantProductId], references: [id], onDelete: Cascade)

  @@unique([comMerchantId, toTerminalGroupId, comMerchantProductId])
  @@schema("commerce")
}

model ComMerchantWebHook {
  id            Int         @id @default(autoincrement())
  description   String
  type          String
  url           String
  comMerchantId Int
  isActive      Boolean     @default(true)
  blameUser     String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime
  ComMerchant   ComMerchant @relation(fields: [comMerchantId], references: [id])

  @@unique([type, comMerchantId])
  @@schema("commerce")
}

model ComOperationalFiles {
  id                                    Int                      @id @default(autoincrement())
  fileName                              String?
  generationTime                        String?
  initialSyncTime                       DateTime?
  deprecatedAt                          DateTime?
  fileSize                              Int?
  comReceiptCount                       Int                      @default(0)
  comMerchantProductCount               Int                      @default(0)
  isProcessed                           Boolean                  @default(false)
  lastUpdate                            DateTime?
  blameUser                             String?
  createdAt                             DateTime?                @default(now())
  updatedAt                             DateTime
  comPaymentModeCount                   Int                      @default(0)
  comTerminalFunctionCount              Int                      @default(0)
  draftEndtime                          DateTime?
  draftMode                             Boolean?                 @default(false)
  comCashflowReasonCount                Int                      @default(0)
  lastComCashflowReasonId               Int?
  lastComMerchantProductId              Int?
  lastComPaymentModeId                  Int?
  lastComReceiptId                      Int?
  lastComTerminalFunctionId             Int?
  comMerchantXComPaymentMode            Int                      @default(0)
  comMerchantXComTerminalFunction       Int                      @default(0)
  comPaymentModeRestriction             Int                      @default(0)
  comProductPaymentRestriction          Int                      @default(0)
  comTerminalFunctionRestriction        Int                      @default(0)
  lastComMerchantXComPaymentModeId      Int?
  lastComMerchantXComTerminalFunctionId Int?
  lastComPaymentModeRestrictionId       Int?
  lastComProductPaymentRestrictionId    Int?
  lastComTerminalFunctionRestrictionId  Int?
  comMerchantXComPaymentModeCount       Int                      @default(0)
  comMerchantXComTerminalFunctionCount  Int                      @default(0)
  comPaymentModeRestrictionCount        Int                      @default(0)
  comProductPaymentRestrictionCount     Int                      @default(0)
  comTerminalFunctionRestrictionCount   Int                      @default(0)
  comMerchantProductRestrictionCount    Int                      @default(0)
  lastComMerchantProductRestrictionId   Int?
  comPaymentVoucherReasonCount          Int                      @default(0)
  lastComPaymentVoucherReasonId         Int?
  comPaymentModeRuleCount               Int                      @default(0)
  lastComPaymentModeRuleId              Int?
  isCurrent                             Boolean?                 @unique
  tag                                   commerce_OperationalTag? @unique
  approvalDate                          DateTime?
  requestDate                           DateTime?
  requestedTag                          commerce_OperationalTag? @unique
  sysApprovalUserSub                    String?
  sysRequestUserSub                     String?
  comCommerceChannelCount               Int                      @default(0)
  comCommerceChannelTerminalCount       Int                      @default(0)
  lastComCommerceChannelId              Int?
  lastComCommerceChannelTerminalId      Int?

  @@unique([fileName, draftMode])
  @@schema("commerce")
}

model ComPaymentMode {
  id                           Int                            @id @default(autoincrement())
  description                  String
  isActive                     Boolean                        @default(true)
  blameUser                    String
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime
  allowChange                  Boolean                        @default(true)
  usualReceived                Int[]
  paymentMethod                PaymentMethod                  @default(cash)
  allowVoucher                 Boolean                        @default(false)
  allowRechargeOrderRelease    Boolean                        @default(false)
  ComInvoice                   ComInvoice[]
  ComPaymentModeRestriction    ComPaymentModeRestriction[]
  ComPaymentModeRule           ComPaymentModeRule[]
  ComProductPaymentRestriction ComProductPaymentRestriction[]
  ComRechargeOrder             ComRechargeOrder[]
  ComRechargeOrder_new         ComRechargeOrder_new[]
  ComSubscription              ComSubscription[]
  ComTransaction               ComTransaction[]
  ComTransactionSummary        ComTransactionSummary[]
  ComMerchant                  ComMerchant[]                  @relation("ComMerchantToComPaymentMode")

  @@index([id, paymentMethod])
  @@index([paymentMethod], type: Hash)
  @@schema("commerce")
}

model ComPaymentModeRestriction {
  id                Int            @id @default(autoincrement())
  comMerchantId     Int
  toTerminalGroupId Int
  comPaymentModeId  Int
  blameUser         String
  createdAt         DateTime       @default(now())
  updatedAt         DateTime
  isActive          Boolean        @default(true)
  ComMerchant       ComMerchant    @relation(fields: [comMerchantId], references: [id])
  ComPaymentMode    ComPaymentMode @relation(fields: [comPaymentModeId], references: [id])

  @@unique([comMerchantId, toTerminalGroupId, comPaymentModeId])
  @@schema("commerce")
}

model ComPaymentModeRule {
  id                     Int                 @id @default(autoincrement())
  comMerchantId          Int
  comPaymentModeId       Int
  comPaymentModeRuleType PaymentModeRuleType
  weekdays               Weekday[]
  startTime              DateTime?           @db.Time(6)
  endTime                DateTime?           @db.Time(6)
  intervalTime           Int?
  value                  Int
  toTerminalCode         Int?
  toTerminalGroupId      Int?
  toTransportOperatorId  Int?
  isActive               Boolean             @default(true)
  blameUser              String
  createdAt              DateTime            @default(now())
  updatedAt              DateTime
  ComMerchant            ComMerchant         @relation(fields: [comMerchantId], references: [id])
  ComPaymentMode         ComPaymentMode      @relation(fields: [comPaymentModeId], references: [id])

  @@unique([comMerchantId, toTerminalGroupId, comPaymentModeId])
  @@schema("commerce")
}

model ComPaymentOrder {
  id                         Int                  @id @default(autoincrement())
  value                      Int
  paymentType                PaymentType
  externalOrderId            String?
  externalInfo1              String?
  externalInfo2              String?
  requestDate                DateTime
  paymentDate                DateTime?
  expirationDate             DateTime?
  cancelDate                 DateTime?
  isActive                   Boolean              @default(true)
  comRechargeOrderId         Int?
  comTransactionId           Int?
  dvcThingThingName          String?
  blameUser                  String
  createdAt                  DateTime             @default(now())
  updatedAt                  DateTime
  paymentStatus              PaymentOrderStatus
  bankSlipId                 String?
  externalInfo3              String?
  externalInfo4              String?
  organizationDocumentNumber String?
  billetUrl                  String?
  ComRechargeOrder           ComRechargeOrder?    @relation(fields: [comRechargeOrderId], references: [id])
  ComTransaction             ComTransaction?      @relation(fields: [comTransactionId], references: [id])
  ComPaymentOrderLog         ComPaymentOrderLog[]

  @@index([comRechargeOrderId])
  @@index([createdAt])
  @@index([expirationDate])
  @@schema("commerce")
}

model ComPaymentOrderLog {
  id                Int                 @id @default(autoincrement())
  comPaymentOrderId Int
  date              DateTime            @default(now())
  type              PaymentOrderLogType
  elapsedTime       Int?
  requestEndpoint   String
  requestBody       Json
  errorCode         String?
  errorMessage      String?
  responseBody      Json?
  approvedCode      String?
  approvedMessage   String?
  blameUser         String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime
  ComPaymentOrder   ComPaymentOrder     @relation(fields: [comPaymentOrderId], references: [id])

  @@schema("commerce")
}

model ComPaymentVoucher {
  id                                                                      Int                      @id @default(autoincrement())
  rnd                                                                     Int
  date                                                                    DateTime
  voucherType                                                             ComVoucherType
  expiration                                                              DateTime?
  comPaymentVoucherReasonId                                               Int?
  comment                                                                 String?
  comOrigTransactionGuid                                                  String?                  @unique
  comDestTransactionGuid                                                  String?                  @unique
  toSysCode                                                               Int?
  mediaId                                                                 String?
  externalMediaId                                                         String?
  value                                                                   Int
  isProcessed                                                             Boolean                  @default(false)
  processDate                                                             DateTime?
  isActive                                                                Boolean                  @default(true)
  blameUser                                                               String
  createdAt                                                               DateTime                 @default(now())
  updatedAt                                                               DateTime
  payload                                                                 String?
  comServiceGuid                                                          String?
  toTerminalCode                                                          Int?
  toTransportOperatorId                                                   Int?
  medTransitProductId                                                     Int?
  ComTransaction_ComPaymentVoucher_comDestTransactionGuidToComTransaction ComTransaction?          @relation("ComPaymentVoucher_comDestTransactionGuidToComTransaction", fields: [comDestTransactionGuid], references: [guid])
  ComTransaction_ComPaymentVoucher_comOrigTransactionGuidToComTransaction ComTransaction?          @relation("ComPaymentVoucher_comOrigTransactionGuidToComTransaction", fields: [comOrigTransactionGuid], references: [guid])
  ComPaymentVoucherReason                                                 ComPaymentVoucherReason? @relation(fields: [comPaymentVoucherReasonId], references: [id])

  @@unique([id, rnd])
  @@index([createdAt])
  @@schema("commerce")
}

model ComPaymentVoucherReason {
  id                Int                 @id @default(autoincrement())
  description       String
  isActive          Boolean             @default(true)
  blameUser         String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime
  ComPaymentVoucher ComPaymentVoucher[]

  @@schema("commerce")
}

model ComProductPaymentRestriction {
  id                   Int                @id @default(autoincrement())
  comMerchantId        Int
  toTerminalGroupId    Int
  comMerchantProductId Int
  comPaymentModeId     Int?
  blameUser            String
  createdAt            DateTime           @default(now())
  updatedAt            DateTime
  isActive             Boolean            @default(true)
  ComMerchant          ComMerchant        @relation(fields: [comMerchantId], references: [id], onDelete: Cascade)
  ComMerchantProduct   ComMerchantProduct @relation(fields: [comMerchantProductId], references: [id], onDelete: Cascade)
  ComPaymentMode       ComPaymentMode?    @relation(fields: [comPaymentModeId], references: [id], onDelete: Cascade)

  @@unique([comMerchantId, toTerminalGroupId, comMerchantProductId, comPaymentModeId])
  @@schema("commerce")
}

model ComReceipt {
  code          Int            @id
  description   String
  text          String
  operationType OperationType?
  mediaType     MediaType?
  blameUser     String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime
  isActive      Boolean        @default(true)
  tags          String[]

  @@unique([operationType, mediaType])
  @@schema("commerce")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ComRechargeOrder {
  id                              Int                            @id @default(autoincrement())
  comMerchantId                   Int
  orderNumber                     String
  date                            DateTime                       @default(now())
  merchantOrderId                 String?
  paymentDate                     DateTime?
  paymentType                     PaymentType?
  paymentUser                     String?
  releaseDate                     DateTime?
  isReleased                      Boolean                        @default(false)
  cancelDate                      DateTime?
  value                           Int
  adminTax                        Int                            @default(0)
  discount                        Int                            @default(0)
  totalValue                      Int                            @default(0)
  isProcessed                     Boolean                        @default(false)
  isActive                        Boolean                        @default(true)
  usrOrganizationId               Int?
  blameUser                       String
  createdAt                       DateTime                       @default(now())
  updatedAt                       DateTime
  cancelUser                      String?
  comPaymentModeId                Int?
  comRechargeOrderCancelReasonId  Int?
  comRechargeOrderReleaseReasonId Int?
  releaseObservation              String?
  releaseUser                     String?
  isPaid                          Boolean                        @default(false)
  paymentObservation              String?
  comInvoiceId                    Int?
  isWaitingPayment                Boolean                        @default(false)
  completeDate                    DateTime?
  completeUser                    String?
  isCompleted                     Boolean                        @default(false)
  usrUserId                       Int?
  externalOrganization            Int?
  externalTransaction             Int?
  externalSequence                Int?
  externalStatus                  String?                        @db.VarChar(1)
  commitedOnWholeSales            Boolean?
  ComMerchantAccountTransaction   ComMerchantAccountTransaction?
  ComPaymentOrder                 ComPaymentOrder[]
  ComInvoice                      ComInvoice?                    @relation(fields: [comInvoiceId], references: [id])
  ComMerchant                     ComMerchant                    @relation(fields: [comMerchantId], references: [id])
  ComPaymentMode                  ComPaymentMode?                @relation(fields: [comPaymentModeId], references: [id])
  ComRechargeOrderCancelReason    ComRechargeOrderCancelReason?  @relation(fields: [comRechargeOrderCancelReasonId], references: [id])
  ComRechargeOrderReleaseReason   ComRechargeOrderReleaseReason? @relation(fields: [comRechargeOrderReleaseReasonId], references: [id])
  ComRechargeOrderDetail          ComRechargeOrderDetail[]

  @@index([usrOrganizationId], map: "idx_belem_organizationid")
  @@index([externalOrganization, externalTransaction, externalSequence], map: "idx_external_rechargeordermt")
  @@schema("commerce")
}

model ComRechargeOrderCancelReason {
  id                   Int                    @id @default(autoincrement())
  description          String
  isActive             Boolean                @default(true)
  blameUser            String
  createdAt            DateTime               @default(now())
  updatedAt            DateTime
  ComRechargeOrder     ComRechargeOrder[]
  ComRechargeOrder_new ComRechargeOrder_new[]

  @@schema("commerce")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ComRechargeOrderDetail {
  id                         Int                         @id @default(autoincrement())
  comRechargeOrderId         Int
  medMediaProductId          Int?
  value                      Int
  isActive                   Boolean                     @default(true)
  blameUser                  String
  createdAt                  DateTime                    @default(now())
  updatedAt                  DateTime
  dispatchDate               DateTime?
  isDispatched               Boolean                     @default(false)
  medMediaCsn                String?
  usrDocumentId              Int?
  medMediaTypeId             Int?
  medTransitProductCode      Int?
  toIssuerCode               Int?
  rechargeRule               RechargeRuleType            @default(mediaExists)
  rechargeTokenCreated       Boolean                     @default(false)
  medMediaTypeExternalId     Int?
  medMediaSequence           Int?
  externalOrganization       Int?
  externalTransaction        Int?
  externalSequence           Int?
  externalIndex              Int?
  externalStatus             String?                     @db.VarChar(1)
  ComRechargeOrder           ComRechargeOrder            @relation(fields: [comRechargeOrderId], references: [id])
  ComRechargeOrderDetailUser ComRechargeOrderDetailUser?

  @@index([comRechargeOrderId])
  @@index([medMediaCsn], type: Hash)
  @@index([medMediaProductId], type: Hash)
  @@index([toIssuerCode, medTransitProductCode])
  @@index([usrDocumentId], type: Hash)
  @@index([externalOrganization, externalTransaction, externalSequence, externalIndex, externalStatus, toIssuerCode, medMediaTypeId, medMediaSequence], map: "ComRechargeOrderDetail_externalOrganization_IDX")
  @@index([externalOrganization, externalTransaction, externalSequence, externalIndex], map: "idx_external_rechargeorderdt")
  @@index([externalTransaction, medMediaSequence], map: "ix_ComRechargeOrderDetail_01")
  @@schema("commerce")
}

model ComRechargeOrderDetailUser {
  id                       Int                    @id @default(autoincrement())
  usrUserName              String
  usrUserBirthdate         String
  usrUserMailAddress       String?
  usrUserDocumentValue     String
  usrUserPhone             String
  usrUserAddressStreet     String
  usrUserAddressNumber     String
  usrUserAddressZipCode    String
  usrUserAddressDistrict   String
  usrUserAddressCity       String
  usrUserAddressState      String
  usrUserAddressCountry    String
  comRechargeOrderDetailId Int                    @unique
  blameUser                String
  createdAt                DateTime               @default(now())
  updatedAt                DateTime
  usrUserGender            commerce_Gender
  usrUserFiliation1        String?
  usrUserFiliation2        String?
  ComRechargeOrderDetail   ComRechargeOrderDetail @relation(fields: [comRechargeOrderDetailId], references: [id], onDelete: Cascade)

  @@index([comRechargeOrderDetailId])
  @@schema("commerce")
}

model ComRechargeOrderReleaseReason {
  id                   Int                    @id @default(autoincrement())
  description          String
  isActive             Boolean                @default(true)
  blameUser            String
  createdAt            DateTime               @default(now())
  updatedAt            DateTime
  ComRechargeOrder     ComRechargeOrder[]
  ComRechargeOrder_new ComRechargeOrder_new[]

  @@schema("commerce")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ComRechargeOrderTax {
  id                        Int                         @id @default(autoincrement())
  description               String
  isDefault                 Boolean                     @default(false)
  isActive                  Boolean                     @default(true)
  blameUser                 String
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime
  type                      RechargeOrderTaxType
  ComMerchant               ComMerchant[]
  ComRechargeOrderTaxDetail ComRechargeOrderTaxDetail[]
  ComSubscription           ComSubscription[]

  @@schema("commerce")
}

model ComRechargeOrderTaxDetail {
  id                    Int                 @id @default(autoincrement())
  type                  CommisionType
  value                 Int
  minValue              Int
  startDate             DateTime            @default(now())
  endDate               DateTime?
  comRechargeOrderTaxId Int
  blameUser             String
  createdAt             DateTime            @default(now())
  updatedAt             DateTime
  ComRechargeOrderTax   ComRechargeOrderTax @relation(fields: [comRechargeOrderTaxId], references: [id])

  @@index([comRechargeOrderTaxId])
  @@schema("commerce")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ComService {
  guid                  String                  @id
  comMerchantId         Int?
  openDate              DateTime?
  closeType             ServiceCloseType?
  closeDate             DateTime?
  isProcessed           Boolean                 @default(false)
  isClosed              Boolean                 @default(false)
  dvcThingThingName     String?
  usrOperatorId         Int?
  toTransportOperatorId Int?
  toTerminalCode        Int?
  blameUser             String
  createdAt             DateTime                @default(now())
  updatedAt             DateTime
  location              Unsupported("point")?
  closingPin            String?
  closingPinRequired    Boolean?                @default(false)
  pinExpiration         DateTime?
  pinGeneratedBy        String?
  checkPin              Int?
  sessionNumber         Int?
  toTerminalGroupId     Int?
  ComCashflow           ComCashflow[]
  ComMerchant           ComMerchant?            @relation(fields: [comMerchantId], references: [id])
  ComTransaction        ComTransaction[]
  ComTransactionSummary ComTransactionSummary[]

  @@unique([checkPin, toTerminalCode, openDate])
  @@index([comMerchantId, usrOperatorId])
  @@index([guid, createdAt])
  @@index([toTerminalCode, toTransportOperatorId])
  @@index([toTerminalGroupId], type: Hash)
  @@schema("commerce")
}

model ComSubscription {
  id                      Int                       @id @default(autoincrement())
  description             String
  closeDay                Int                       @default(1)
  dueDay                  Int                       @default(5)
  comRechargeOrderTaxId   Int
  comPaymentModeId        Int
  blameUser               String
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime
  isActive                Boolean                   @default(true)
  ComInvoice              ComInvoice[]
  ComMerchant             ComMerchant[]
  ComPaymentMode          ComPaymentMode            @relation(fields: [comPaymentModeId], references: [id])
  ComRechargeOrderTax     ComRechargeOrderTax       @relation(fields: [comRechargeOrderTaxId], references: [id])
  ComSubscriptionFunction ComSubscriptionFunction[] @relation("ComSubscriptionToComSubscriptionFunction")

  @@schema("commerce")
}

model ComSubscriptionFunction {
  id              Int               @id @default(autoincrement())
  code            String
  description     String
  blameUser       String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime
  ComSubscription ComSubscription[] @relation("ComSubscriptionToComSubscriptionFunction")

  @@schema("commerce")
}

model ComTerminalFunction {
  code                           Int                              @id
  description                    String
  comment                        String
  isActive                       Boolean                          @default(true)
  blameUser                      String
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime
  mediaType                      MediaType?
  operationType                  OperationType?
  ComTerminalFunctionRestriction ComTerminalFunctionRestriction[]
  ComMerchant                    ComMerchant[]                    @relation("ComMerchantToComTerminalFunction")

  @@schema("commerce")
}

model ComTerminalFunctionRestriction {
  id                      Int                 @id @default(autoincrement())
  comMerchantId           Int
  toTerminalGroupId       Int
  comTerminalFunctionCode Int
  blameUser               String
  createdAt               DateTime            @default(now())
  updatedAt               DateTime
  isActive                Boolean             @default(true)
  ComMerchant             ComMerchant         @relation(fields: [comMerchantId], references: [id])
  ComTerminalFunction     ComTerminalFunction @relation(fields: [comTerminalFunctionCode], references: [code])

  @@unique([comMerchantId, toTerminalGroupId, comTerminalFunctionCode])
  @@schema("commerce")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ComTransaction {
  id                                                                         Int                            @id @default(autoincrement())
  guid                                                                       String                         @unique
  comServiceGuid                                                             String
  comPaymentModeId                                                           Int?
  date                                                                       DateTime
  processDate                                                                DateTime?
  value                                                                      Int
  receivedValue                                                              Int
  comissionType                                                              CommisionType?
  comissionTypeValue                                                         Int?
  comissionValue                                                             Int
  type_old                                                                   String?
  subType                                                                    Int
  operationType                                                              OperationType
  mediaId                                                                    String?
  externalTransactionId                                                      String?
  isProcessed                                                                Boolean                        @default(false)
  isError                                                                    Boolean                        @default(false)
  errorMessage                                                               String?
  isActive                                                                   Boolean                        @default(true)
  dvcThingThingName                                                          String?
  blameUser                                                                  String
  createdAt                                                                  DateTime                       @default(now())
  updatedAt                                                                  DateTime
  tvv                                                                        String?
  comMerchantProductId                                                       Int?
  acknowledged                                                               Boolean                        @default(false)
  transactionNumber                                                          String                         @unique
  comTransactionCancelFromGuid                                               String?                        @unique
  type                                                                       MediaType
  externalMediaId                                                            String?
  toSysCode                                                                  Int?
  abtWalletId                                                                Int?
  isCancelling                                                               Boolean                        @default(false)
  isPaymentComplete                                                          Boolean                        @default(false)
  answerNsu                                                                  Int?
  externalRequest                                                            Json?
  nsu                                                                        Int?
  toIssuerCode                                                               Int?
  acquirer                                                                   String?
  acquirerPaymentId                                                          String?
  formatedLogical                                                            String?
  ComExternalTransactionDetail                                               ComExternalTransactionDetail?
  ComMerchantAccountTransaction                                              ComMerchantAccountTransaction?
  ComPaymentOrder                                                            ComPaymentOrder[]
  ComPaymentVoucher_ComPaymentVoucher_comDestTransactionGuidToComTransaction ComPaymentVoucher?             @relation("ComPaymentVoucher_comDestTransactionGuidToComTransaction")
  ComPaymentVoucher_ComPaymentVoucher_comOrigTransactionGuidToComTransaction ComPaymentVoucher?             @relation("ComPaymentVoucher_comOrigTransactionGuidToComTransaction")
  ComMerchantProduct                                                         ComMerchantProduct?            @relation(fields: [comMerchantProductId], references: [id])
  ComPaymentMode                                                             ComPaymentMode?                @relation(fields: [comPaymentModeId], references: [id])
  ComService                                                                 ComService                     @relation(fields: [comServiceGuid], references: [guid])
  ComTransaction                                                             ComTransaction?                @relation("ComTransactionToComTransaction", fields: [comTransactionCancelFromGuid], references: [guid])
  other_ComTransaction                                                       ComTransaction?                @relation("ComTransactionToComTransaction")
  ComTransactionPaymentDetail                                                ComTransactionPaymentDetail[]

  @@unique([guid, dvcThingThingName])
  @@index([comServiceGuid], type: Hash)
  @@index([guid, dvcThingThingName])
  @@index([type, mediaId])
  @@schema("commerce")
}

model ComTransactionPaymentDetail {
  id               Int            @id @default(autoincrement())
  comTransactionId Int
  key              String
  value            String
  ComTransaction   ComTransaction @relation(fields: [comTransactionId], references: [id])

  @@unique([comTransactionId, key])
  @@schema("commerce")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ComTransactionSummary {
  id                      Int             @id @default(autoincrement())
  date                    DateTime        @db.Date
  comMerchantId           Int
  comServiceGuid          String
  comPaymentModeId        Int?
  type_old                String?
  subType                 Int
  operationType           OperationType
  transactionCount        Int             @default(0)
  transactionCountPerHour Int[]
  transactionAmount       Int             @default(0)
  receivedAmount          Int             @default(0)
  comissionAmount         Int             @default(0)
  errorCount              Int             @default(0)
  blameUser               String
  createdAt               DateTime        @default(now())
  updatedAt               DateTime
  comMerchantProductId    Int?
  type                    MediaType?
  toSysCode               Int?
  toIssuerCode            Int?
  ComMerchant             ComMerchant     @relation(fields: [comMerchantId], references: [id])
  ComPaymentMode          ComPaymentMode? @relation(fields: [comPaymentModeId], references: [id])
  ComService              ComService      @relation(fields: [comServiceGuid], references: [guid])

  @@unique([date, comMerchantId, comServiceGuid, comPaymentModeId, type, subType, operationType, comMerchantProductId, toSysCode, toIssuerCode])
  @@index([comServiceGuid])
  @@index([date, comMerchantId])
  @@index([date])
  @@index([id, comPaymentModeId])
  @@index([id, createdAt])
  @@index([operationType, createdAt])
  @@schema("commerce")
}

model MedBinaryListFile {
  id               Int         @id @default(autoincrement())
  type             MedListType
  version          Int
  fileName         String
  generationTimeMs Int
  fileSizeBytes    Int         @default(0)
  count            Int         @default(0)
  lastId           Int         @default(0)
  firstId          Int         @default(0)
  blameUser        String?
  createdAt        DateTime?   @default(now())
  updatedAt        DateTime
  hash             String?

  @@unique([fileName, type])
  @@schema("media")
}

model MedBinaryListFileExternalHotlistContent {
  id                                   Int            @id @default(autoincrement())
  medExternalHotListId                 Int?
  medMediaCsn                          BigInt?
  medExternalHotListExternalCardNumber BigInt?
  medHotlistReasonAction               HotlistAction?
  toSysCode                            Int?
  medExternalHotlistExpirationDate     DateTime?
  medBinaryListFileId                  Int

  @@index([medBinaryListFileId])
  @@index([medExternalHotListId])
  @@schema("media")
}

model MedBinaryListFileMediaHotlistContent {
  id                       Int            @id @default(autoincrement())
  medHotlistId             Int?
  medMediaCsn              BigInt?
  medHotlistReasonAction   HotlistAction?
  toSysCode                Int?
  medHotlistExpirationDate DateTime?
  medBinaryListFileId      Int

  @@index([medBinaryListFileId])
  @@index([medHotlistId])
  @@schema("media")
}

model MedBinaryListFileProductHotlistContent {
  id                     Int            @id @default(autoincrement())
  medProductHotlistId    Int?
  medMediaCsn            BigInt?
  toIssuerCode           Int?
  medTransitProductCode  Int?
  medHotlistReasonAction HotlistAction?
  toSysCode              Int?
  medBinaryListFileId    Int

  @@index([medBinaryListFileId])
  @@index([medProductHotlistId])
  @@schema("media")
}

model MedBinaryListFileProductRechargeContent {
  id                                 Int       @id @default(autoincrement())
  medMediaProductRechargeId          Int?
  medMediaCsn                        BigInt?
  medTransitProductCode              Int?
  medMediaProductRechargeReleaseDate DateTime?
  medMediaProductRechargeRsn         Int?
  medMediaProductRechargeValue       Int?
  medMediaProductRechargeCreditSerie Int?
  toSysCode                          Int?
  medMediaProductRechargeToken       String?
  medBinaryListFileId                Int

  @@index([medBinaryListFileId])
  @@index([medMediaProductRechargeId])
  @@schema("media")
}

model MedBinaryListFileProductUpdateContent {
  id                       Int        @id @default(autoincrement())
  medMediaProductUpdateId  Int?
  medMediaCsn              BigInt?
  toIssuerCode             Int?
  medTransitProductCode    Int?
  medMediaProductUpdateUsn Int?
  fieldType                FieldType?
  newValue                 Int?
  toSysCode                Int?
  medBinaryListFileId      Int

  @@index([medBinaryListFileId])
  @@index([medMediaProductUpdateId])
  @@schema("media")
}

model MedExternalHotList {
  id                    Int              @id @default(autoincrement())
  medHotlistReasonId    Int
  csn                   BigInt?
  externalCardNumber    BigInt?
  toSysCode             Int?
  isProcessed           Boolean?         @default(false)
  liveDate              DateTime?
  blameUser             String
  createdAt             DateTime         @default(now())
  updatedAt             DateTime
  statusDate            DateTime?
  dvcThingThingName     String?
  toTerminalCode        Int?
  toTransportOperatorId Int?
  confirmationSequence  Int?
  MedHotlistReason      MedHotlistReason @relation(fields: [medHotlistReasonId], references: [id], onDelete: Cascade)

  @@index([confirmationSequence])
  @@schema("media")
}

model MedExternalHotlistFile {
  id                     Int            @id @default(autoincrement())
  version                Int?
  fileName               String         @unique
  generationTime         String?
  fileSize               Int?
  firstExternalHotlistId Int?
  lastExternalHotlistId  Int?
  externalHotlistCount   Int?
  blameUser              String?
  createdAt              DateTime?      @default(now())
  updatedAt              DateTime
  fileType               media_FileType @default(file)

  @@unique([fileName, fileType])
  @@schema("media")
}

model MedExternalHotlistFileContent {
  id                       Int     @id @default(autoincrement())
  externalHotlistId        Int?
  cardNumber               BigInt?
  sysCode                  Int?
  action                   Int?
  medExternalHotlistFileId Int

  @@index([medExternalHotlistFileId])
  @@schema("media")
}

model MedExternalMediaSystem {
  id                                Int                                 @id @default(autoincrement())
  toSysCode                         Int
  medMediaCsn                       BigInt
  mediaExternalNumber               Int
  toIssuerCode                      Int
  createdAt                         DateTime                            @default(now())
  updatedAt                         DateTime
  MedExternalMediaSystemTransaction MedExternalMediaSystemTransaction[]

  @@unique([toSysCode, medMediaCsn])
  @@schema("media")
}

model MedExternalMediaSystemTransaction {
  id                            Int                    @id @default(autoincrement())
  thingName                     String
  rnd                           Int
  toTerminalCode                Int
  dvcThingHardwareSerial        String
  dptDepotId                    Int
  medExternalMediaLogicalNumber Int
  cardType                      Int
  balance1A                     Int
  balance1B                     Int
  balance2A                     Int
  balance2B                     Int
  balance3A                     Int
  balance3B                     Int
  balanceT1                     Int
  balanceT2                     Int
  tsn                           Int
  tsnEst                        Int
  tsnTmp                        Int
  rsn1A                         Int
  rsn1B                         Int
  rsn2A                         Int
  rsn2B                         Int
  rsn3A                         Int
  rsn3B                         Int
  rsnT1                         Int
  rsnT2                         Int
  date                          Int
  tktUsageId                    Int                    @unique
  location                      Unsupported("point")?
  medExternalMediaSystemId      Int
  createdAt                     DateTime               @default(now())
  updatedAt                     DateTime
  medExternalMediaCsn           BigInt
  MedExternalMediaSystem        MedExternalMediaSystem @relation(fields: [medExternalMediaSystemId], references: [id])

  @@unique([medExternalMediaSystemId, thingName, rnd])
  @@schema("media")
}

model MedExternalMediaTransaction {
  id                        Int                    @id @default(autoincrement())
  transactionDate           DateTime
  transactionType           TransactionAccountType
  transactionMode           TransactionMode
  purseTransactionMode      PurseTransactionMode
  usn                       Int?
  rnd                       Int
  thingName                 String
  tsn                       Int?
  value                     Int?
  rsn                       Int?
  replayCount               Int?
  purseBalanceA             Int?
  purseBalanceB             Int?
  balance                   Int?
  purseDateA                DateTime?
  purseDateB                DateTime?
  purseSerieA               Int?
  purseSerieB               Int?
  samCSN                    String?
  validityStartDate         DateTime?
  validityEndDate           DateTime?
  hourCounter               Int?
  dayCounter                Int?
  weekCounter               Int?
  monthCounter              Int?
  yearCounter               Int?
  restrictionLines          Int[]
  restrictionLineGroups     Int[]
  location                  Unsupported("point")?
  signature                 String?
  medUseLimitRoleId         Int?
  medTimeGroupRoleId        Int?
  medMediaProductId         Int?
  medMediaProductRechargeId Int?
  lineDirection             LineDirection?
  externalMediacsn          BigInt?
  externalToIssuerCode      Int?
  externalMedMediaTypeId    Int?
  externalMedMediaSequence  Int?
  externalMedMediaCheckDig  Int?
  tktUsageId                Int?                   @unique
  tktRejectId               Int?                   @unique
  toTransportOperatorId     Int
  toTerminalId              Int
  toLineId                  Int?
  blameUser                 String?
  createdAt                 DateTime?              @default(now())
  updatedAt                 DateTime

  @@unique([thingName, rnd])
  @@schema("media")
}

model MedExternalTransitProduct {
  id                    Int      @id @default(autoincrement())
  description           String
  displayText           String?
  shortDisplayText      String?
  code                  Int
  toIssuerCode          Int
  type                  String?
  toSysCode             Int
  blameUser             String
  createdAt             DateTime @default(now())
  updatedAt             DateTime
  dvcDisplayMessageCode Int?

  @@unique([toSysCode, code, toIssuerCode])
  @@schema("media")
}

model MedExternalTransitProductCollectorGroup {
  externalId                        Int
  toSystemCode                      Int
  medTransitProductCollectorGroupId Int
  locked                            Boolean                         @default(true)
  isActive                          Boolean                         @default(true)
  blameUser                         String?
  createdAt                         DateTime?                       @default(now())
  updatedAt                         DateTime
  MedTransitProductCollectorGroup   MedTransitProductCollectorGroup @relation(fields: [medTransitProductCollectorGroupId], references: [id])

  @@id([toSystemCode, externalId, medTransitProductCollectorGroupId])
  @@schema("media")
}

model MedHotlist {
  id                    Int              @id @default(autoincrement())
  medMediaId            Int?
  medHotlistReasonId    Int
  blameUser             String
  createdAt             DateTime         @default(now())
  updatedAt             DateTime
  isProcessed           Boolean?         @default(false)
  csn                   BigInt?
  externalId            Int?
  toSysCode             Int?
  dvcThingThingName     String?
  toTerminalCode        Int?
  toTransportOperatorId Int?
  statusDate            DateTime?
  expirationDate        DateTime?
  hotlistCompleteId     Int?
  comment               String?
  confirmationSequence  Int?
  blameExternalUserId   String?
  blameProviderId       String?
  wasMigrated           Boolean?         @default(false)
  hasPoliceReport       Boolean?         @default(false)
  MedHotlistReason      MedHotlistReason @relation(fields: [medHotlistReasonId], references: [id], onDelete: Cascade)
  MedMedia              MedMedia?        @relation(fields: [medMediaId], references: [id], onDelete: Cascade)

  @@unique([externalId, toSysCode])
  @@index([confirmationSequence])
  @@index([csn, toSysCode, externalId, createdAt])
  @@index([medMediaId])
  @@schema("media")
}

model MedHotlistFile {
  id             Int            @id @default(autoincrement())
  fileName       String         @unique
  generationTime String?
  fileSize       Int?
  blameUser      String?
  lastHotlistId  Int?
  firstHotlistId Int?
  createdAt      DateTime?      @default(now())
  updatedAt      DateTime
  hotlistCount   Int?
  version        Int?
  fileType       media_FileType @default(file)

  @@unique([fileName, fileType])
  @@schema("media")
}

model MedHotlistFileContent {
  id               Int     @id @default(autoincrement())
  hotlistId        Int?
  csn              BigInt?
  action           Int?
  sysCode          Int?
  expirationDate   Int?
  medHotlistFileId Int

  @@index([medHotlistFileId])
  @@schema("media")
}

model MedHotlistReason {
  id                  Int                  @id @default(autoincrement())
  description         String
  action              HotlistAction
  isPublic            Boolean              @default(true)
  isActive            Boolean              @default(true)
  blameUser           String
  createdAt           DateTime             @default(now())
  updatedAt           DateTime
  allowCreditTransfer Boolean              @default(false)
  allowDuplicates     Boolean              @default(false)
  allowUnblock        Boolean              @default(false)
  expirationDays      Int?
  chargereissuetax    Boolean              @default(false)
  MedExternalHotList  MedExternalHotList[]
  MedHotlist          MedHotlist[]
  MedProductHotlist   MedProductHotlist[]

  @@schema("media")
}

model MedMedia {
  id                                                           Int                   @id @default(autoincrement())
  sequence                                                     Int
  checkDig                                                     Int
  formatedLogical                                              String
  isProcessed                                                  Boolean               @default(false)
  csn                                                          BigInt?               @unique
  isCsnExtended                                                Boolean?
  sizeInKB                                                     Int?
  tagType                                                      TagType?
  medMediaTypeId                                               Int?
  blameUser                                                    String?
  createdAt                                                    DateTime?             @default(now())
  updatedAt                                                    DateTime
  isActive                                                     Boolean?              @default(true)
  isHotlisted                                                  Boolean               @default(false)
  recordDate                                                   DateTime?
  usrUserHash                                                  String?
  usrUserId                                                    Int?
  usrOrganizationId                                            Int?
  reissueSequence                                              Int                   @default(0)
  toIssuerCode                                                 Int?
  activePersoOrderId                                           Int?
  usrTypeIds                                                   Int[]
  medMediaReissueFromId                                        Int?                  @unique
  externalId                                                   BigInt?
  toSysCode                                                    Int?
  bss_id                                                       Int?
  MedHotlist                                                   MedHotlist[]
  MedMedia                                                     MedMedia?             @relation("MedMediaToMedMedia", fields: [medMediaReissueFromId], references: [id])
  other_MedMedia                                               MedMedia?             @relation("MedMediaToMedMedia")
  MedMediaType                                                 MedMediaType?         @relation(fields: [medMediaTypeId], references: [id])
  MedMediaProduct                                              MedMediaProduct[]
  MedMediaTransfer_MedMediaTransfer_medOriginMediaIdToMedMedia MedMediaTransfer?     @relation("MedMediaTransfer_medOriginMediaIdToMedMedia")
  MedMediaTransfer_MedMediaTransfer_medTargetMediaIdToMedMedia MedMediaTransfer?     @relation("MedMediaTransfer_medTargetMediaIdToMedMedia")
  MedOperatorProfile                                           MedOperatorProfile?
  MedPersoOrderDetail                                          MedPersoOrderDetail[]

  @@unique([externalId, toSysCode])
  @@unique([toIssuerCode, medMediaTypeId, sequence])
  @@index([csn], type: Hash)
  @@index([usrUserId])
  @@schema("media")
}

model MedMediaProduct {
  id                          Int                           @id @default(autoincrement())
  startValidity               DateTime                      @default(now())
  endValidity                 DateTime?
  usn                         Int                           @default(0)
  isActive                    Boolean                       @default(true)
  isDisabled                  Boolean                       @default(false)
  blameUser                   String?
  createdAt                   DateTime?                     @default(now())
  updatedAt                   DateTime
  medMediaId                  Int
  medUseLimitRoleId           Int?
  medTransitProductId         Int
  medTimeGroupRoleId          Int?
  isHotlisted                 Boolean                       @default(false)
  isProcessed                 Boolean                       @default(false)
  medQuotaId                  Int?
  rsn                         Int?                          @default(0)
  toLineGroupIds              Int[]
  toLineIds                   Int[]
  toQuotaLineIds              Int[]
  externalId                  Int?
  toSysCode                   Int?
  useLimitType                LimitType?
  useLimitValue               Int?
  ctrIndex                    Int?
  status                      String?
  MedMedia                    MedMedia                      @relation(fields: [medMediaId], references: [id], onDelete: Cascade)
  MedQuota                    MedQuota?                     @relation(fields: [medQuotaId], references: [id], onDelete: Cascade)
  MedTimeGroupRole            MedTimeGroupRole?             @relation(fields: [medTimeGroupRoleId], references: [id], onDelete: Cascade)
  MedTransitProduct           MedTransitProduct             @relation(fields: [medTransitProductId], references: [id], onDelete: Cascade)
  MedUseLimitRole             MedUseLimitRole?              @relation(fields: [medUseLimitRoleId], references: [id], onDelete: Cascade)
  MedMediaProductRecharge     MedMediaProductRecharge[]
  MedMediaProductRecharge_new MedMediaProductRecharge_new[]
  MedMediaProductState        MedMediaProductState?
  MedMediaProductUpdate       MedMediaProductUpdate[]
  MedMediaTransaction         MedMediaTransaction[]
  MedProductHotlist           MedProductHotlist[]

  @@unique([externalId, toSysCode])
  @@unique([medMediaId, medTransitProductId])
  @@index([medMediaId], type: Hash)
  @@index([medTransitProductId], type: Hash)
  @@schema("media")
}

model MedMediaProductRecharge {
  id                                    Int                      @id @default(autoincrement())
  medMediaProductId                     Int?
  releaseDate                           DateTime?
  type                                  RechargeType
  rsn                                   Int
  isProcessed                           Boolean                  @default(false)
  rechargeToken                         String?
  rechargeDate                          DateTime?
  isRecharged                           Boolean                  @default(false)
  blameUser                             String
  createdAt                             DateTime                 @default(now())
  updatedAt                             DateTime
  comRechargeOrderDetailId              Int?                     @unique
  isActive                              Boolean                  @default(true)
  isTransfer                            Boolean                  @default(false)
  medMediaProductRechargeTransferFromId Int?                     @unique
  medMediaTransferId                    Int?
  samCsn                                String?
  signature                             String?
  value                                 Int                      @default(0)
  usrOrganizationId                     Int?
  csn                                   BigInt?
  externalId                            Int?
  medTransitProductCode                 Int?
  toIssuerCode                          Int?
  toSysCode                             Int?
  creditSerie                           Int?
  dvcThingThingName                     String?
  toTerminalCode                        Int?
  toTransportOperatorId                 Int?
  statusDate                            DateTime?
  liveDate                              DateTime?
  hotlistCompleteId                     Int?
  confirmationSequence                  Int?
  rechargeReason                        String?
  wasMigrated                           Boolean?                 @default(false)
  pursebalancea                         Int?
  pursebalanceb                         Int?
  pursedatea                            DateTime?
  pursedateb                            DateTime?
  purseseriea                           Int?
  purseserieb                           Int?
  tsn                                   Int?
  MedMediaProduct                       MedMediaProduct?         @relation(fields: [medMediaProductId], references: [id], onDelete: Cascade)
  MedMediaProductRecharge               MedMediaProductRecharge? @relation("MedMediaProductRechargeToMedMediaProductRecharge", fields: [medMediaProductRechargeTransferFromId], references: [id], onDelete: Cascade)
  other_MedMediaProductRecharge         MedMediaProductRecharge? @relation("MedMediaProductRechargeToMedMediaProductRecharge")
  MedMediaTransfer                      MedMediaTransfer?        @relation(fields: [medMediaTransferId], references: [id])
  MedMediaTransaction                   MedMediaTransaction[]

  @@unique([csn, rsn, medTransitProductCode, toIssuerCode])
  @@unique([externalId, toSysCode])
  @@index([confirmationSequence])
  @@index([medMediaProductId])
  @@index([medTransitProductCode, csn, toIssuerCode, createdAt, isRecharged])
  @@schema("media")
}

model MedMediaProductRechargeFile {
  id                          Int            @id @default(autoincrement())
  fileName                    String         @unique
  generationTime              String?
  fileSize                    Int?
  updateCount                 Int?
  lastMediaProductRechargeId  Int?
  firstMediaProductRechargeId Int?
  mediaProductRechargeTotal   Int?
  blameUser                   String?
  createdAt                   DateTime?      @default(now())
  updatedAt                   DateTime
  version                     Int?
  fileType                    media_FileType @default(file)

  @@unique([fileName, fileType])
  @@schema("media")
}

model MedMediaProductState {
  id                    Int                 @id @default(autoincrement())
  lastTSN               Int
  totalCredit           Int
  totalDebit            Int
  medMediaProductId     Int                 @unique
  medMediaTransactionId Int
  blameUser             String?
  createdAt             DateTime?           @default(now())
  updatedAt             DateTime?
  MedMediaProduct       MedMediaProduct     @relation(fields: [medMediaProductId], references: [id], onDelete: Cascade)
  MedMediaTransaction   MedMediaTransaction @relation(fields: [medMediaTransactionId], references: [id], onDelete: Cascade)

  @@schema("media")
}

model MedMediaProductUpdate {
  id                    Int              @id @default(autoincrement())
  usn                   Int
  fieldType             FieldType
  newValue              Int?
  oldValue              Int?
  isProcessed           Boolean          @default(false)
  blameUser             String?
  createdAt             DateTime?        @default(now())
  updatedAt             DateTime
  medMediaProductId     Int?
  dvcThingThingName     String?
  updateDate            DateTime?
  csn                   BigInt?
  externalId            BigInt?
  medTransitProductCode Int?
  toIssuerCode          Int?
  toSysCode             Int?
  toTerminalCode        Int?
  toTransportOperatorId Int?
  statusDate            DateTime?
  hotlistCompleteId     Int?
  confirmationSequence  Int?
  wasMigrated           Boolean?         @default(false)
  MedMediaProduct       MedMediaProduct? @relation(fields: [medMediaProductId], references: [id], onDelete: Cascade)

  @@unique([csn, medTransitProductCode, usn])
  @@unique([toSysCode, externalId, fieldType])
  @@index([confirmationSequence])
  @@schema("media")
}

model MedMediaTemplate {
  id           String         @id
  url          String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  blameUser    String?
  MedMediaType MedMediaType[]

  @@schema("media")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model MedMediaTransaction {
  id                        Int                      @id @default(autoincrement())
  transactionDate           DateTime
  transactionType           TransactionAccountType
  transactionMode           TransactionMode
  purseTransactionMode      PurseTransactionMode
  rnd                       Int
  thingName                 String
  toTerminalId              Int
  tsn                       Int
  value                     Int
  rsn                       Int?
  purseBalanceA             Int
  purseBalanceB             Int
  balance                   Int
  purseDateA                DateTime?
  purseDateB                DateTime?
  purseSerieA               Int?
  purseSerieB               Int?
  samCSN                    String?
  validityStartDate         DateTime
  validityEndDate           DateTime
  hourCounter               Int?
  dayCounter                Int?
  weekCounter               Int?
  monthCounter              Int?
  yearCounter               Int?
  restrictionLines          Int[]
  restrictionLineGroups     Int[]
  tktUsageId                Int?                     @unique
  location                  Unsupported("point")?
  signature                 String
  blameUser                 String?
  createdAt                 DateTime?                @default(now())
  updatedAt                 DateTime
  medUseLimitRoleId         Int?
  medMediaProductId         Int
  medTimeGroupRoleId        Int?
  toLineId                  Int?
  tktRejectId               Int?                     @unique
  toTransportOperatorId     Int
  medMediaProductRechargeId Int?
  comTransactionGuid        String?                  @unique
  usn                       Int                      @default(0)
  replayCount               Int                      @default(0)
  lineDirection             LineDirection?
  debitValueA               Int?
  debitValueB               Int?
  MedMediaProductState      MedMediaProductState[]
  MedMediaProduct           MedMediaProduct          @relation(fields: [medMediaProductId], references: [id])
  MedMediaProductRecharge   MedMediaProductRecharge? @relation(fields: [medMediaProductRechargeId], references: [id])
  MedTimeGroupRole          MedTimeGroupRole?        @relation(fields: [medTimeGroupRoleId], references: [id])
  MedUseLimitRole           MedUseLimitRole?         @relation(fields: [medUseLimitRoleId], references: [id])

  @@unique([thingName, rnd])
  @@index([medMediaProductId], map: "medmediatransaction_medmediaproductid_idx")
  @@schema("media")
}

model MedMediaTransfer {
  id                                                   Int                           @id @default(autoincrement())
  medOriginMediaId                                     Int                           @unique
  medTargetMediaId                                     Int                           @unique
  scheduleDate                                         DateTime?
  completionDate                                       DateTime?
  isCompleted                                          Boolean                       @default(false)
  isActive                                             Boolean                       @default(true)
  blameUser                                            String
  createdAt                                            DateTime                      @default(now())
  updatedAt                                            DateTime
  MedMediaProductRecharge                              MedMediaProductRecharge[]
  MedMediaProductRecharge_new                          MedMediaProductRecharge_new[]
  MedMedia_MedMediaTransfer_medOriginMediaIdToMedMedia MedMedia                      @relation("MedMediaTransfer_medOriginMediaIdToMedMedia", fields: [medOriginMediaId], references: [id], onDelete: Cascade)
  MedMedia_MedMediaTransfer_medTargetMediaIdToMedMedia MedMedia                      @relation("MedMediaTransfer_medTargetMediaIdToMedMedia", fields: [medTargetMediaId], references: [id], onDelete: Cascade)

  @@schema("media")
}

model MedMediaType {
  id                             Int                              @id
  description                    String                           @unique
  tagType                        TagType
  sizeInKB                       Int
  isActive                       Boolean?                         @default(true)
  blameUser                      String?
  createdAt                      DateTime?                        @default(now())
  updatedAt                      DateTime
  sequence                       Int                              @default(0)
  usrTypeIds                     Int[]
  externalId                     Int?                             @unique
  standardOperatorCard           Boolean?                         @default(false)
  medMediaTemplateId             String?
  toIssuerCode                   Int?
  allowMedMediaTypeIds           Int[]
  com_ct_id_reissue              Int?                             @db.SmallInt
  deliveryDays                   Int?                             @db.SmallInt
  MedMedia                       MedMedia[]
  MedMediaTemplate               MedMediaTemplate?                @relation(fields: [medMediaTemplateId], references: [id])
  MedMediaTypeXMedTransitProduct MedMediaTypeXMedTransitProduct[]
  MedPersoOrder                  MedPersoOrder[]
  MedPersoOrderDetail            MedPersoOrderDetail[]

  @@schema("media")
}

model MedMediaTypeXMedTransitProduct {
  id                  Int               @id @default(autoincrement())
  medMediaTypeId      Int
  medTransitProductId Int
  validityDaysQty     Int?
  isDisabled          Boolean           @default(false)
  blameUser           String?
  createdAt           DateTime?         @default(now())
  updatedAt           DateTime
  useLimitType        LimitType?
  useLimitValue       Int?
  MedMediaType        MedMediaType      @relation(fields: [medMediaTypeId], references: [id])
  MedTransitProduct   MedTransitProduct @relation(fields: [medTransitProductId], references: [id])

  @@unique([medMediaTypeId, medTransitProductId])
  @@schema("media")
}

model MedMigrationLog {
  id           Int                 @id @default(autoincrement())
  type         media_MigrationType
  externalId   BigInt
  externalData String
  message      String
  createdAt    DateTime            @default(now())

  @@schema("media")
}

model MedOperationalFiles {
  id                                           Int                   @id @default(autoincrement())
  fileName                                     String?
  generationTime                               String?
  initialSyncTime                              DateTime?
  deprecatedAt                                 DateTime?
  medTransitProductCount                       Int?
  lastMedTransitProduct                        Int?
  medUseLimitRoleCount                         Int?
  lastMedUseLimitRole                          Int?
  medTimeWeekDefCount                          Int?
  lastMedTimeWeekDef                           Int?
  medTimeRestrictionPeriodDefCount             Int?
  lastMedTimeRestrictionPeriodDef              Int?
  medProductLineRestrictionCount               Int?
  lastMedProductLineRestriction                Int?
  medProductTransportOperatorRestrictionCount  Int?
  lastMedProductTransportOperatorRestriction   Int?
  fileSize                                     Int?
  lastUpdate                                   DateTime?
  blameUser                                    String?
  isProcessed                                  Boolean?              @default(false)
  createdAt                                    DateTime?             @default(now())
  updatedAt                                    DateTime
  lastMedTimeGroupRole                         Int?
  medTimeGroupRoleCount                        Int?
  lastMedProductOverrideUsageRole              Int?
  medProductOverrideUsageRoleCount             Int?
  lastMedTransitProductCollectorGroup          Int?
  lastMedTransitProductReportGroup             Int?
  medTransitProductCollectorGroupCount         Int?
  medTransitProductReportGroupCount            Int?
  draftEndtime                                 DateTime?
  draftMode                                    Boolean?              @default(false)
  lastMedQuota                                 Int?
  medQuotaCount                                Int?
  lastMedExternalTransitProductCollectorGroup  Int?
  medExternalTransitProductCollectorGroupCount Int?
  lastMedTransitProductPeriodRestriction       Int?
  medTransitProductPeriodRestrictionCount      Int?
  lastMedExternalTransitProduct                Int?
  medExternalTransitProductCount               Int?
  isCurrent                                    Boolean?              @unique
  tag                                          media_OperationalTag? @unique
  approvalDate                                 DateTime?
  requestDate                                  DateTime?
  requestedTag                                 media_OperationalTag? @unique
  sysApprovalUserSub                           String?
  sysRequestUserSub                            String?
  lastMedExternalHotlist                       Int?
  medExternalHotlistCount                      Int?
  lastMedQuotaRestrictionPeriodId              Int?
  medQuotaRestrictionPeriodCount               Int?

  @@unique([fileName, draftMode])
  @@schema("media")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model MedOperatorProfile {
  id                         Int       @id @default(autoincrement())
  usrHrId                    Int?
  medMediaId                 Int       @unique
  toOperatorGroupId          Int?
  toTransportOperatorGroupId Int?
  usrOperatorId              Int?
  blameUser                  String?
  createdAt                  DateTime? @default(now())
  toTransportOperatorId      Int?
  updatedAt                  DateTime?
  MedMedia                   MedMedia  @relation(fields: [medMediaId], references: [id])

  @@schema("media")
}

model MedPersoOrder {
  id                  Int                   @id @default(autoincrement())
  type                media_PersoOrderType
  externalCode        String?
  thingName           String?
  mediaCount          Int
  successCount        Int                   @default(0)
  errorCount          Int                   @default(0)
  isProcessed         Boolean
  isActive            Boolean?              @default(true)
  blameUser           String?
  createdAt           DateTime?             @default(now())
  updatedAt           DateTime
  skipError           Boolean               @default(false)
  hardwareSerial      String?
  medMediaTypeId      Int
  reportFileName      String?
  isCanceled          Boolean               @default(false)
  isPrintable         Boolean?              @default(true)
  isWritable          Boolean?
  MedMediaType        MedMediaType          @relation(fields: [medMediaTypeId], references: [id])
  MedPersoOrderDetail MedPersoOrderDetail[]
  MedPersoOrderFile   MedPersoOrderFile[]

  @@schema("media")
}

model MedPersoOrderDetail {
  id                         Int                          @id @default(autoincrement())
  medPersoOrderId            Int
  medMediaId                 Int?
  csn                        BigInt?                      @unique
  isProcessed                Boolean                      @default(false)
  errorMessage               String?
  blameUser                  String?
  createdAt                  DateTime?                    @default(now())
  updatedAt                  DateTime
  isPrintError               Boolean
  isWriteError               Boolean
  medMediaTypeId             Int
  isLinkErrorReported        Boolean                      @default(false)
  isPersonalized             Boolean                      @default(false)
  linkStatus                 LinkStatus                   @default(unlinked)
  userDocument               String?
  printedSuccessfully        Boolean?
  writedSuccessfully         Boolean?
  MedMedia                   MedMedia?                    @relation(fields: [medMediaId], references: [id], onDelete: Cascade)
  MedMediaType               MedMediaType                 @relation(fields: [medMediaTypeId], references: [id], onDelete: Cascade)
  MedPersoOrder              MedPersoOrder                @relation(fields: [medPersoOrderId], references: [id], onDelete: Cascade)
  MedPersoOrderDetailCommand MedPersoOrderDetailCommand[]

  @@schema("media")
}

model MedPersoOrderDetailCommand {
  id                    Int                 @id @default(autoincrement())
  medPersoOrderDetailId Int
  type                  PersoCommandType
  data                  String
  size                  Int
  address               Int
  order                 Int
  xor                   String
  blameUser             String?
  createdAt             DateTime?           @default(now())
  updatedAt             DateTime
  MedPersoOrderDetail   MedPersoOrderDetail @relation(fields: [medPersoOrderDetailId], references: [id], onDelete: Cascade)

  @@schema("media")
}

model MedPersoOrderFile {
  id              Int           @id @default(autoincrement())
  medPersoOrderId Int
  fileName        String
  type            PersoFileType
  direction       FileDirection
  blameUser       String?
  createdAt       DateTime?     @default(now())
  updatedAt       DateTime
  MedPersoOrder   MedPersoOrder @relation(fields: [medPersoOrderId], references: [id], onDelete: Cascade)

  @@schema("media")
}

model MedProductHotlist {
  id                    Int              @id @default(autoincrement())
  medMediaProductId     Int?
  medHotlistReasonId    Int
  blameUser             String
  createdAt             DateTime         @default(now())
  updatedAt             DateTime
  isProcessed           Boolean?         @default(false)
  isPropUp              Boolean?         @default(false)
  externalId            Int?
  toSysCode             Int?
  csn                   BigInt?
  medTransitProductCode Int?
  toIssuerCode          Int?
  dvcThingThingName     String?
  toTerminalCode        Int?
  toTransportOperatorId Int?
  statusDate            DateTime?
  hotlistCompleteId     Int?
  confirmationSequence  Int?
  MedHotlistReason      MedHotlistReason @relation(fields: [medHotlistReasonId], references: [id], onDelete: Cascade)
  MedMediaProduct       MedMediaProduct? @relation(fields: [medMediaProductId], references: [id], onDelete: Cascade)

  @@unique([externalId, toSysCode])
  @@index([confirmationSequence])
  @@schema("media")
}

model MedProductHotlistFile {
  id                    Int            @id @default(autoincrement())
  fileName              String         @unique
  generationTime        String?
  fileSize              Int?
  blameUser             String?
  lastProductHotlistId  Int?
  firstProductHotlistId Int?
  createdAt             DateTime?      @default(now())
  updatedAt             DateTime
  productHotlistCount   Int?
  version               Int?
  fileType              media_FileType @default(file)

  @@unique([fileName, fileType])
  @@schema("media")
}

model MedProductHotlistFileContent {
  id                      Int     @id @default(autoincrement())
  productHotlistId        Int?
  csn                     BigInt?
  issuer                  Int?
  product                 Int?
  action                  Int?
  sysCode                 Int?
  medProductHotlistFileId Int

  @@index([medProductHotlistFileId])
  @@schema("media")
}

model MedProductLineRestriction {
  id                  Int               @id @default(autoincrement())
  medTransitProductId Int
  blameUser           String?
  createdAt           DateTime?         @default(now())
  updatedAt           DateTime
  isActive            Boolean?          @default(true)
  toLineId            Int
  MedTransitProduct   MedTransitProduct @relation(fields: [medTransitProductId], references: [id], onDelete: Cascade)

  @@unique([medTransitProductId, toLineId])
  @@schema("media")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model MedProductOverrideUsageRole {
  id                            Int               @id @default(autoincrement())
  medTransitProductId           Int
  passbackDevice                Int?
  passbackLine                  Int?
  checkValidity                 Boolean           @default(false)
  checkUseLimit                 Boolean           @default(false)
  checkTimeGroup                Boolean           @default(false)
  checkLineGroups               Boolean           @default(false)
  checkTransportOperator        Boolean           @default(false)
  checkLines                    Boolean           @default(false)
  checkOperatorAcknowledgment   Boolean           @default(false)
  blameUser                     String
  createdAt                     DateTime          @default(now())
  updatedAt                     DateTime
  toTransportOperatorId         Int
  checkQuota                    Boolean           @default(false)
  allowAttendant                Boolean           @default(false)
  allowNegativeValue            Boolean           @default(false)
  passbackDeviceDirection       Int?
  passbackGeneral               Int?
  passbackLineDirection         Int?
  checkIntegration              Boolean           @default(false)
  maxIntegrationCounter         Int?
  externalType                  Int?
  isActive                      Boolean?          @default(true)
  allowNegativeValueIntegration Boolean?          @default(false)
  maxNegativeBalance            Int?
  MedTransitProduct             MedTransitProduct @relation(fields: [medTransitProductId], references: [id], onDelete: Cascade)

  @@unique([medTransitProductId, toTransportOperatorId])
  @@schema("media")
}

model MedProductTransportOperatorRestriction {
  id                    Int               @id @default(autoincrement())
  medTransitProductId   Int
  blameUser             String?
  createdAt             DateTime?         @default(now())
  updatedAt             DateTime
  isActive              Boolean?          @default(true)
  toTransportOperatorId Int
  MedTransitProduct     MedTransitProduct @relation(fields: [medTransitProductId], references: [id], onDelete: Cascade)

  @@unique([medTransitProductId, toTransportOperatorId])
  @@schema("media")
}

model MedQuota {
  id                        Int                         @id @default(autoincrement())
  description               String
  type                      QuotaType
  monthStartDay             Int?
  value                     Int?
  isActive                  Boolean                     @default(true)
  blameUser                 String
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime
  quantityMultiplier        Int?
  isLegacy                  Boolean?                    @default(false)
  maxReloadCount            Int?
  MedMediaProduct           MedMediaProduct[]
  MedQuotaRestrictionPeriod MedQuotaRestrictionPeriod[]
  MedTransitProduct         MedTransitProduct[]

  @@schema("media")
}

model MedQuotaRestrictionPeriod {
  id                 Int      @id @default(autoincrement())
  startDate          DateTime @default(now())
  endDate            DateTime
  isActive           Boolean  @default(true)
  quantityMultiplier Int?
  value              Int      @default(0)
  blameUser          String
  createdAt          DateTime @default(now())
  updatedAt          DateTime
  medQuotaId         Int
  MedQuota           MedQuota @relation(fields: [medQuotaId], references: [id], onDelete: Cascade)

  @@unique([medQuotaId, startDate, endDate])
  @@schema("media")
}

model MedRechargeFile {
  id              Int            @id @default(autoincrement())
  version         Int?
  fileName        String         @unique
  generationTime  String?
  fileSize        Int?
  rechargeCount   Int?
  lastRechargeId  Int?
  firstRechargeId Int?
  blameUser       String?
  createdAt       DateTime?      @default(now())
  updatedAt       DateTime
  fileType        media_FileType @default(file)

  @@schema("media")
}

model MedRechargeFileContent {
  id                Int     @id @default(autoincrement())
  rechargeId        Int?
  csn               BigInt?
  product           Int?
  date              Int?
  rsn               Int?
  value             Int?
  serie             Int?
  sysCode           Int?
  token             String?
  medRechargeFileId Int

  @@index([medRechargeFileId])
  @@schema("media")
}

model MedTimeGroupRole {
  id                          Int                           @id
  description                 String
  blameUser                   String?
  createdAt                   DateTime?                     @default(now())
  updatedAt                   DateTime
  isActive                    Boolean?                      @default(true)
  MedMediaProduct             MedMediaProduct[]
  MedMediaTransaction         MedMediaTransaction[]
  MedTimeRestrictionPeriodDef MedTimeRestrictionPeriodDef[]
  MedTimeWeekDef              MedTimeWeekDef[]
  MedTransitProduct           MedTransitProduct[]           @relation("MedTimeGroupRoleToMedTransitProduct")

  @@schema("media")
}

model MedTimeRestrictionPeriodDef {
  id                 Int              @id @default(autoincrement())
  startDate          DateTime         @db.Date
  endDate            DateTime         @db.Date
  medTimeGroupRoleId Int
  createdAt          DateTime?        @default(now())
  updatedAt          DateTime
  blameUser          String?
  description        String
  isActive           Boolean?         @default(true)
  MedTimeGroupRole   MedTimeGroupRole @relation(fields: [medTimeGroupRoleId], references: [id], onDelete: Cascade)

  @@schema("media")
}

model MedTimeWeekDef {
  id                 Int              @id @default(autoincrement())
  startTime          Int
  endTime            Int
  medTimeGroupRoleId Int
  createdAt          DateTime?        @default(now())
  updatedAt          DateTime
  weekDefs           WeekDefinition[]
  blameUser          String?
  isActive           Boolean?         @default(true)
  MedTimeGroupRole   MedTimeGroupRole @relation(fields: [medTimeGroupRoleId], references: [id], onDelete: Cascade)

  @@schema("media")
}

model MedTransitProduct {
  id                                     Int                                      @id
  code                                   Int
  description                            String
  type                                   TransitProductType
  isManagedByUser                        Boolean                                  @default(true)
  displayName                            String
  maxValue                               Int?
  priority                               Int                                      @unique
  passbackDevice                         Int?
  passbackLine                           Int?
  fareGraceType                          FareGraceType
  fareGracePeriod                        Int?
  checkValidity                          Boolean                                  @default(false)
  checkUseLimit                          Boolean                                  @default(false)
  checkTimeGroup                         Boolean                                  @default(false)
  checkLineGroups                        Boolean                                  @default(false)
  checkTransportOperator                 Boolean                                  @default(false)
  checkLines                             Boolean                                  @default(false)
  startDate                              DateTime                                 @default(now()) @db.Date
  endDate                                DateTime?                                @db.Date
  blameUser                              String?
  createdAt                              DateTime?                                @default(now())
  updatedAt                              DateTime
  isActive                               Boolean?                                 @default(true)
  syncedDate                             DateTime?
  keyDiver                               String
  checkOperatorAcknowledgment            Boolean?                                 @default(false)
  keyId                                  Int?
  samFlags                               Int?
  samLayoutType                          Int?
  samUpdateKeyId                         Int?
  samUpdateLv2KeyId                      Int?
  toIssuerCode                           Int?
  usrTypeIds                             Int[]
  allowNegativeValue                     Boolean                                  @default(false)
  medTransitProductCollectorGroupId      Int?
  medTransitProductReportGroupId         Int?
  keySAMLevelA                           Int?
  keySAMLevelB                           Int?
  keySAMbitmaskA                         Int?
  keySAMbitmaskB                         Int?
  checkIntegration                       Boolean?                                 @default(true)
  maxIntegrationCounter                  Int?
  allowAttendant                         Boolean?                                 @default(false)
  externalType                           Int?
  passbackDeviceDirection                Int?
  passbackGeneral                        Int?
  passbackLineDirection                  Int?
  allowNegativeValueIntegration          Boolean?                                 @default(false)
  maxNegativeBalance                     Int?
  dvcDisplayMessageCode                  Int?
  dvcIntegrationDisplayMessageCode       Int?
  keyType                                ProductKeyType?
  dailyUsageLimit                        Int?
  medQuotaId                             Int?
  medTransitProductReloadPeriodId        Int?
  externalTypeVersion                    Int?
  MedMediaProduct                        MedMediaProduct[]
  MedMediaTypeXMedTransitProduct         MedMediaTypeXMedTransitProduct[]
  MedProductLineRestriction              MedProductLineRestriction[]
  MedProductOverrideUsageRole            MedProductOverrideUsageRole[]
  MedProductTransportOperatorRestriction MedProductTransportOperatorRestriction[]
  MedQuota                               MedQuota?                                @relation(fields: [medQuotaId], references: [id])
  MedTransitProductCollectorGroup        MedTransitProductCollectorGroup?         @relation(fields: [medTransitProductCollectorGroupId], references: [id])
  MedTransitProductReportGroup           MedTransitProductReportGroup?            @relation(fields: [medTransitProductReportGroupId], references: [id])
  MedTransitProductPeriodRestriction     MedTransitProductPeriodRestriction[]
  MedTransitProductReloadPeriod          MedTransitProductReloadPeriod[]
  MedTimeGroupRole                       MedTimeGroupRole[]                       @relation("MedTimeGroupRoleToMedTransitProduct")
  MedUseLimitRole                        MedUseLimitRole[]                        @relation("MedTransitProductToMedUseLimitRole")

  @@unique([toIssuerCode, code])
  @@schema("media")
}

model MedTransitProductCollectorGroup {
  id                                      Int                                       @id
  description                             String
  isActive                                Boolean?                                  @default(true)
  blameUser                               String?
  createdAt                               DateTime?                                 @default(now())
  updatedAt                               DateTime
  MedExternalTransitProductCollectorGroup MedExternalTransitProductCollectorGroup[]
  MedTransitProduct                       MedTransitProduct[]

  @@schema("media")
}

model MedTransitProductPeriodRestriction {
  id                    Int               @id @default(autoincrement())
  medTransitProductId   Int
  toTransportOperatorId Int?
  startDate             DateTime          @db.Date
  endDate               DateTime          @db.Date
  blameUser             String
  createdAt             DateTime          @default(now())
  updatedAt             DateTime
  isActive              Boolean?          @default(true)
  quotaPercent          Int?
  MedTransitProduct     MedTransitProduct @relation(fields: [medTransitProductId], references: [id])

  @@index([medTransitProductId, startDate])
  @@index([medTransitProductId, toTransportOperatorId, startDate])
  @@schema("media")
}

model MedTransitProductReloadPeriod {
  id                  Int                    @id @default(autoincrement())
  type                media_ReloadPeriodType
  monthStartDay       Int
  startDate           DateTime               @default(now()) @db.Date
  endDate             DateTime?              @db.Date
  maxRechargeValue    Int?
  maxRechargeCount    Int?
  isActive            Boolean?               @default(true)
  blameUser           String
  createdAt           DateTime               @default(now())
  updatedAt           DateTime
  description         String
  quantityMultiplier  Int?
  periodId            Int?
  medTransitProductId Int?
  MedTransitProduct   MedTransitProduct?     @relation(fields: [medTransitProductId], references: [id], onDelete: Cascade)

  @@index([medTransitProductId], type: Hash)
  @@index([startDate, endDate])
  @@schema("media")
}

model MedTransitProductReportGroup {
  id                Int                 @id @default(autoincrement())
  description       String
  isActive          Boolean?            @default(true)
  blameUser         String?
  createdAt         DateTime?           @default(now())
  updatedAt         DateTime
  MedTransitProduct MedTransitProduct[]

  @@schema("media")
}

model MedUpdateFile {
  id             Int            @id @default(autoincrement())
  fileName       String         @unique
  generationTime String?
  fileSize       Int?
  updateCount    Int?
  blameUser      String?
  lastUpdateId   Int?
  firstUpdateId  Int?
  updateTotal    Int?
  createdAt      DateTime?      @default(now())
  updatedAt      DateTime
  version        Int?
  fileType       media_FileType @default(file)

  @@unique([fileName, fileType])
  @@schema("media")
}

model MedUpdateFileContent {
  id              Int     @id @default(autoincrement())
  updateId        Int?
  csn             BigInt?
  issuer          Int?
  product         Int?
  usn             Int?
  field           Int?
  value           Int?
  sysCode         Int?
  medUpdateFileId Int

  @@index([medUpdateFileId])
  @@schema("media")
}

model MedUseLimitRole {
  id                  Int                   @id
  description         String
  hourLimit           Int?
  dayLimit            Int?
  weekLimit           Int?
  monthLimit          Int?
  yearLimit           Int?
  isActive            Boolean               @default(true)
  blameUser           String?
  createdAt           DateTime?             @default(now())
  updatedAt           DateTime
  limitType           LimitType?
  limitUsage          Int?
  tagType             TagType?
  isLegacy            Boolean?              @default(false)
  MedMediaProduct     MedMediaProduct[]
  MedMediaTransaction MedMediaTransaction[]
  MedTransitProduct   MedTransitProduct[]   @relation("MedTransitProductToMedUseLimitRole")

  @@schema("media")
}

model SalEmployee {
  id                 Int                 @id @default(autoincrement())
  salCompanyId       Int
  document           String?             @db.VarChar(30)
  name               String              @db.VarChar(60)
  birthDate          DateTime            @db.Timestamptz(6)
  hrID               String?             @db.VarChar(50)
  motherName         String?             @db.VarChar(60)
  dailyValue         Int?
  SalEmployeeGroupId Int?
  cardNumber         String?             @db.VarChar(100)
  addrZipCode        String?             @db.VarChar(10)
  addrStreet         String?             @db.VarChar(255)
  addrNbr            String?             @db.VarChar(30)
  addrComplement     String?             @db.VarChar(255)
  addrDistrict       String?             @db.VarChar(255)
  addrCity           String?             @db.VarChar(100)
  toSysCode          Int?
  externalId         BigInt?
  isActive           Boolean             @default(true)
  blameUser          String?             @db.VarChar(255)
  createdAt          DateTime?           @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime?           @default(now()) @db.Timestamptz(6)
  addrCountry        String?             @db.VarChar(30)
  addrState          String?             @db.VarChar(30)
  email              String?             @db.VarChar(100)
  phone              String?             @db.VarChar(100)
  gender             salesportal_Gender?
  userType           Int?
  SalEmployeeGroup   SalEmployeeGroup?   @relation(fields: [SalEmployeeGroupId], references: [id])
  SalCompany         SalCompany          @relation(fields: [salCompanyId], references: [id])
  SalOrderItem       SalOrderItem[]

  @@schema("salesportal")
}

model SalEmployeeGroup {
  id                   Int           @id @default(autoincrement())
  salCompanyId         Int
  description          String        @db.VarChar(255)
  isActive             Boolean       @default(true)
  blameUser            String?       @db.VarChar(255)
  createdAt            DateTime?     @default(now()) @db.Timestamptz(6)
  updatedAt            DateTime      @db.Timestamptz(6)
  longDescription      String?       @db.VarChar(255)
  SalEmployee          SalEmployee[]
  SalCompany           SalCompany    @relation(fields: [salCompanyId], references: [id])
  SalCompanyCredential SalCompanyCredential[]
  SalImportFile        SalImportFile[]
  SalImportFileLine    SalImportFileLine[]
  SalOrder             SalOrder[]

  @@schema("salesportal")
}

model UsrDisability {
  id                       Int                      @id @default(autoincrement())
  usrUserId                Int
  usrIcdId                 Int
  usrServiceStationId      Int?
  usrDisabilityEquipmentId Int?
  approvalType             ApprovalType
  registration             DateTime?                @db.Date
  doctorName               String?
  doctorRegistration       String?
  validity                 DateTime?                @db.Date
  comment                  String?
  isActive                 Boolean                  @default(true)
  blameUser                String
  createdAt                DateTime                 @default(now())
  updatedAt                DateTime
  externalId               Int?                     @unique
  stamp                    String?
  UsrDisabilityEquipment   UsrDisabilityEquipment?  @relation(fields: [usrDisabilityEquipmentId], references: [id])
  UsrIcd                   UsrIcd                   @relation(fields: [usrIcdId], references: [id])
  UsrServiceStation        UsrServiceStation?       @relation(fields: [usrServiceStationId], references: [id])
  UsrUser                  UsrUser                  @relation(fields: [usrUserId], references: [id], onDelete: Cascade)
  UsrDisabilityAttendant   UsrDisabilityAttendant[]

  @@schema("user")
}

model UsrDisabilityAttendant {
  id                Int              @id @default(autoincrement())
  name              String
  document          String?
  comment           String?
  isActive          Boolean          @default(true)
  blameUser         String
  createdAt         DateTime         @default(now())
  updatedAt         DateTime
  usrDisabilityId   Int?
  externalId        Int?             @unique
  usrDocumentTypeId Int?
  usrUserId         Int?
  UsrDisability     UsrDisability?   @relation(fields: [usrDisabilityId], references: [id])
  UsrDocumentType   UsrDocumentType? @relation(fields: [usrDocumentTypeId], references: [id])
  UsrUser           UsrUser?         @relation(fields: [usrUserId], references: [id])

  @@schema("user")
}

model UsrDisabilityEquipment {
  id            Int             @id @default(autoincrement())
  description   String
  isActive      Boolean         @default(true)
  blameUser     String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime
  UsrDisability UsrDisability[]

  @@schema("user")
}

model UsrElderly {
  id                  Int                @id @default(autoincrement())
  usrUserId           Int
  registration        DateTime?          @db.Date
  usrServiceStationId Int?
  isActive            Boolean            @default(true)
  blameUser           String
  createdAt           DateTime           @default(now())
  updatedAt           DateTime
  externalId          Int?               @unique
  UsrServiceStation   UsrServiceStation? @relation(fields: [usrServiceStationId], references: [id])
  UsrUser             UsrUser            @relation(fields: [usrUserId], references: [id], onDelete: Cascade)

  @@schema("user")
}

model UsrIcd {
  id             Int             @id @default(autoincrement())
  name           String
  description    String
  isActive       Boolean         @default(true)
  blameUser      String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime
  allowAttendant Boolean         @default(false)
  code           String
  comment        String?
  isApproved     Boolean         @default(false)
  validity       Int?
  UsrDisability  UsrDisability[]

  @@index([code], map: "UsrIcd_code")
  @@schema("user")
}

model UsrMigrationLog {
  id           Int           @id @default(autoincrement())
  type         MigrationType
  externalId   Int
  externalData String
  message      String
  createdAt    DateTime      @default(now())

  @@schema("user")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model UsrOperator {
  id                         Int       @id @default(autoincrement())
  usrUserId                  Int
  toTransportOperatorId      Int?
  toTransportOperatorGroupId Int?
  toOperatorGroupId          Int?
  admissionDate              DateTime? @db.Date
  resignDate                 DateTime? @db.Date
  hrid                       Int?
  isMaster                   Boolean   @default(false)
  isActive                   Boolean   @default(true)
  blameUser                  String
  createdAt                  DateTime  @default(now())
  updatedAt                  DateTime
  comment                    String?
  externalId                 Int?      @unique
  operatorPin                String?
  UsrUser                    UsrUser   @relation(fields: [usrUserId], references: [id], onDelete: Cascade)

  @@schema("user")
}

model UsrOrganizationGroup {
  id                Int             @id @default(autoincrement())
  description       String
  longDescription   String?
  usrOrganizationId Int
  isActive          Boolean         @default(true)
  blameUser         String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime
  UsrOrganization   UsrOrganization @relation(fields: [usrOrganizationId], references: [id], map: "usrOrganizationGroupId_fkey")

  @@schema("user")
}

model UsrServiceStation {
  id            Int                   @id @default(autoincrement())
  name          String
  shortName     String
  street        String
  number        String
  complement    String?
  zipCode       String
  location      Unsupported("point")?
  isActive      Boolean               @default(true)
  blameUser     String
  createdAt     DateTime              @default(now())
  updatedAt     DateTime
  city          String?
  district      String?
  state         String?
  externalId    Int?                  @unique
  UsrDisability UsrDisability[]
  UsrElderly    UsrElderly[]

  @@schema("user")
}

model UsrStudent {
  id                 Int               @id @default(autoincrement())
  usrUserId          Int
  usrOrganizationId  Int
  admissionDate      DateTime?         @db.Date
  resignDate         DateTime?         @db.Date
  registryDocument   String?
  grade              String?
  classroom          String?
  isActive           Boolean?          @default(true)
  blameUser          String
  createdAt          DateTime          @default(now())
  updatedAt          DateTime
  usrStudentLevelId  Int?
  usrStudentPeriodId Int?
  usrStudentTypeId   Int?
  externalId         Int?              @unique
  medQuotaId         Int?
  UsrOrganization    UsrOrganization   @relation(fields: [usrOrganizationId], references: [id])
  UsrStudentLevel    UsrStudentLevel?  @relation(fields: [usrStudentLevelId], references: [id])
  UsrStudentPeriod   UsrStudentPeriod? @relation(fields: [usrStudentPeriodId], references: [id])
  UsrStudentType     UsrStudentType?   @relation(fields: [usrStudentTypeId], references: [id])
  UsrUser            UsrUser           @relation(fields: [usrUserId], references: [id], onDelete: Cascade)

  @@schema("user")
}

model UsrStudentLevel {
  id          Int          @id @default(autoincrement())
  description String
  isActive    Boolean      @default(true)
  blameUser   String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime
  UsrStudent  UsrStudent[]

  @@schema("user")
}

model UsrStudentPeriod {
  id          Int          @id @default(autoincrement())
  description String
  isActive    Boolean      @default(true)
  blameUser   String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime
  UsrStudent  UsrStudent[]

  @@schema("user")
}

model UsrStudentType {
  id          Int          @id @default(autoincrement())
  description String
  isActive    Boolean      @default(true)
  blameUser   String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime
  UsrStudent  UsrStudent[]

  @@schema("user")
}

model UsrType {
  id                           Int               @id @default(autoincrement())
  description                  String
  type                         UserBaseType
  comment                      String?
  isActive                     Boolean           @default(true)
  blameUser                    String
  createdAt                    DateTime          @default(now())
  updatedAt                    DateTime
  maximumAge                   Int?
  minimalAge                   Int?
  externalId                   Int?              @unique
  checkStatusOnMediaCreate     Boolean           @default(false)
  checkStatusOnUserCreate      Boolean           @default(false)
  showOnSimplifiedUserRegister Boolean           @default(false)
  UsrDocumentType              UsrDocumentType[] @relation("UsrDocumentType_UsrType_IsRequired")
  UsrUser                      UsrUser[]         @relation("UsrTypeToUsrUser")

  @@schema("user")
}

model UsrUserHistory {
  id        Int      @id @default(autoincrement())
  usrUserId Int
  tableName String
  fieldName String
  oldValue  String
  newValue  String
  blameUser String
  updatedAt DateTime @default(now())
  operation String?
  UsrUser   UsrUser  @relation(fields: [usrUserId], references: [id])

  @@schema("user")
}

model UsrUserTag {
  id        Int      @id @default(autoincrement())
  clientId  String
  usrUserId Int
  tag       String
  blameUser String
  createdAt DateTime @default(now())
  updatedAt DateTime
  UsrUser   UsrUser  @relation(fields: [usrUserId], references: [id])

  @@unique([clientId, usrUserId, tag])
  @@schema("user")
}

model MedMediaHistory {
  id             Int      @id @unique @default(autoincrement())
  medMediaId     Int
  tableName      String?
  fieldName      String?
  infOldValue    String?
  infoNewValue   String?
  medMediaStatus String?
  blameUser      String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime
  productId      Int?

  @@schema("media")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model SalParameters {
  age                  Boolean?
  minOrder             Int?
  maxOrder             Int?
  secondCopyValue      Int?
  id                   Int      @id(map: "pk_salparameters_id") @default(autoincrement())
  systemVersion        String?  @db.VarChar(25)
  systemProjectId      String?  @db.VarChar(10)
  taxValue01           Decimal? @db.Decimal(10, 2)
  taxDescValue01       String?  @db.VarChar(30)
  taxDeliveryValue     Decimal? @db.Decimal(10, 2)
  taxDescDeliveryValue String?  @db.VarChar(30)
  numberDaysBill       Int?
  masterPassword       String?   @db.VarChar(255)

  @@schema("salesportal")
}

model com_tax {
  ct_id           Int             @id(map: "PK_com_tax") @default(autoincrement()) @db.SmallInt
  ct_shortname    String?         @db.VarChar(50)
  ct_description  String?
  ct_externalid   String?         @db.VarChar(20)
  ct_isactive     Boolean         @default(true)
  ct_createdat_tz DateTime        @default(now()) @db.Timestamptz(6)
  ct_updatedat_tz DateTime?       @db.Timestamptz(6)
  ct_blameuser    String          @db.VarChar(320)
  ct_taxtype      String?
  ct_name         ComTaxType
  com_taxdetail   com_taxdetail[]

  @@schema("commerce")
}

model com_taxdetail {
  ctd_id                Int       @id(map: "PK_com_taxdetail") @default(autoincrement())
  ct_id                 Int?      @db.SmallInt
  ctd_validitystartdate DateTime  @db.Date
  ctd_value             String
  ctd_divfactor         Int       @default(100) @db.SmallInt
  ctd_createdat_tz      DateTime  @default(now()) @db.Timestamptz(6)
  ctd_updatedat_tz      DateTime? @db.Timestamptz(6)
  ctd_blameuser         String    @db.VarChar(320)
  com_tax               com_tax?  @relation(fields: [ct_id], references: [ct_id], onDelete: Cascade, map: "fk_ct_ctd")

  @@index([ct_id], map: "idx_ct_ctd")
  @@schema("commerce")
}

model awsdms_ddl_audit {
  c_key    BigInt    @id @default(autoincrement())
  c_time   DateTime? @db.Timestamp(6)
  c_user   String?   @db.VarChar(64)
  c_txn    String?   @db.VarChar(16)
  c_tag    String?   @db.VarChar(24)
  c_oid    Int?
  c_name   String?   @db.VarChar(64)
  c_schema String?   @db.VarChar(64)
  c_ddlqry String?

  @@schema("public")
}

model SalPoliciesDocumentsParameter {
  id            Int     @id @default(autoincrement())
  use_term_text String?
  lgpd_text     String?

  @@schema("salesportal")
}

model tw_providers {
  id                    Int       @id(map: "tw_providers2_pkey") @default(autoincrement())
  prv_id                BigInt?
  prv_desc              String?   @db.VarChar(90)
  prv_contactdepartment String?   @db.VarChar(50)
  prvinf_psw            String?   @db.VarChar(60)
  st_code               String?   @db.Char(2)
  prvadd_address        String?   @db.VarChar(200)
  prvadd_addnbr         String?   @db.VarChar(15)
  prvadd_addcomp        String?   @db.VarChar(50)
  prvadd_district       String?   @db.VarChar(100)
  prvadd_city           String?   @db.VarChar(100)
  prvadd_zip            String?   @db.Char(8)
  prvdoc_number         String?   @db.VarChar(50)
  prv_regdate           DateTime? @db.Date
  is_migrated           Boolean?
  data_migration        DateTime? @db.Timestamptz(6)

  @@schema("salesportal")
}

model SalOrderDeliveryLocation {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  tax           Int?
  isActive      Boolean?        @default(true)
  SalImportFile SalImportFile[]
  SalOrder      SalOrder[]

  @@schema("salesportal")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model recharge_list_stats {
  exec_date          DateTime?
  vehicles_online    Int?
  last_recharge_list String?

  @@ignore
  @@schema("public")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model temp_sele {
  medMediaProductId                     Int?
  releaseDate                           DateTime?     @db.Timestamp(6)
  type                                  RechargeType?
  rsn                                   Int?
  isProcessed                           Boolean?
  rechargeToken                         String?
  rechargeDate                          DateTime?     @db.Timestamp(6)
  isRecharged                           Boolean?
  blameUser                             String?
  createdAt                             DateTime?     @db.Timestamptz(6)
  updatedAt                             DateTime?     @db.Timestamptz(6)
  comRechargeOrderDetailId              Int?
  isActive                              Boolean?
  isTransfer                            Boolean?
  medMediaProductRechargeTransferFromId String?
  medMediaTransferId                    String?
  samCsn                                String?
  signature                             String?       @db.Char(12)
  value                                 BigInt?
  usrOrganizationId                     Int?
  csn                                   BigInt?
  externalId                            String?
  medTransitProductCode                 Int?
  toIssuerCode                          Int?
  toSysCode                             Int?
  creditSerie                           Int?
  dvcThingThingName                     String?
  toTerminalCode                        String?
  toTransportOperatorId                 String?
  statusDate                            String?
  liveDate                              String?
  hotlistCompleteId                     String?
  confirmationSequence                  String?
  rechargeReason                        String?
  wasMigrated                           Boolean?

  @@ignore
  @@schema("public")
}

model UsrEmployee_old {
  id                Int             @id(map: "UsrEmployee_pkey") @default(autoincrement())
  usrUserId         Int
  usrOrganizationId Int
  admissionDate     DateTime?       @db.Date
  resignDate        DateTime?       @db.Date
  position          String?
  isActive          Boolean         @default(true)
  blameUser         String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime
  comment           String?
  externalId        Int?            @unique(map: "UsrEmployee_externalId_key")
  qtdDayUser        Int?
  UsrOrganization   UsrOrganization @relation(fields: [usrOrganizationId], references: [id], map: "UsrEmployee_usrOrganizationId_fkey")
  UsrUser           UsrUser         @relation(fields: [usrUserId], references: [id], onDelete: Cascade, map: "UsrEmployee_usrUserId_fkey")

  @@schema("user")
}

model ComRechargeOrderDetail_new {
  id                     Int                  @id @default(autoincrement())
  comRechargeOrderId     Int
  medMediaProductId      Int?
  value                  Int
  isActive               Boolean              @default(true)
  blameUser              String
  createdAt              DateTime             @default(now())
  updatedAt              DateTime
  dispatchDate           DateTime?
  isDispatched           Boolean              @default(false)
  medMediaCsn            String?
  usrDocumentId          Int?
  medMediaTypeId         Int?
  medTransitProductCode  Int?
  toIssuerCode           Int?
  rechargeRule           RechargeRuleType     @default(mediaExists)
  rechargeTokenCreated   Boolean              @default(false)
  medMediaTypeExternalId Int?
  medMediaSequence       Int?
  externalOrganization   Int?
  externalTransaction    Int?
  externalSequence       Int?
  externalIndex          Int?
  externalStatus         String?              @db.VarChar(1)
  ComRechargeOrder_new   ComRechargeOrder_new @relation(fields: [comRechargeOrderId], references: [id])

  @@index([comRechargeOrderId])
  @@index([externalOrganization, externalTransaction, externalSequence, externalIndex, externalStatus, toIssuerCode, medMediaTypeId, medMediaSequence], map: "ComRechargeOrderDetail_new_externalOrganization_IDX")
  @@index([medMediaCsn], type: Hash)
  @@index([medMediaProductId], type: Hash)
  @@index([toIssuerCode, medTransitProductCode], map: "ComRechargeOrderDetail_new_toIssuerCode_medTransitProductCode_i")
  @@index([usrDocumentId], type: Hash)
  @@index([externalOrganization, externalTransaction, externalSequence, externalIndex], map: "idx_external_rechargeorderdt_new")
  @@index([externalTransaction, medMediaSequence], map: "ix_ComRechargeOrderDetail_new_01")
  @@schema("commerce")
}

model ComRechargeOrder_new {
  id                              Int                            @id @default(autoincrement())
  comMerchantId                   Int
  orderNumber                     String
  date                            DateTime                       @default(now())
  merchantOrderId                 String?
  paymentDate                     DateTime?
  paymentType                     PaymentType?
  paymentUser                     String?
  releaseDate                     DateTime?
  isReleased                      Boolean                        @default(false)
  cancelDate                      DateTime?
  value                           Int
  adminTax                        Int                            @default(0)
  discount                        Int                            @default(0)
  totalValue                      Int                            @default(0)
  isProcessed                     Boolean                        @default(false)
  isActive                        Boolean                        @default(true)
  usrOrganizationId               Int?
  blameUser                       String
  createdAt                       DateTime                       @default(now())
  updatedAt                       DateTime
  cancelUser                      String?
  comPaymentModeId                Int?
  comRechargeOrderCancelReasonId  Int?
  comRechargeOrderReleaseReasonId Int?
  releaseObservation              String?
  releaseUser                     String?
  isPaid                          Boolean                        @default(false)
  paymentObservation              String?
  comInvoiceId                    Int?
  isWaitingPayment                Boolean                        @default(false)
  completeDate                    DateTime?
  completeUser                    String?
  isCompleted                     Boolean                        @default(false)
  usrUserId                       Int?
  externalOrganization            Int?
  externalTransaction             Int?
  externalSequence                Int?
  externalStatus                  String?                        @db.VarChar(1)
  commitedOnWholeSales            Boolean?
  ComRechargeOrderDetail_new      ComRechargeOrderDetail_new[]
  ComInvoice                      ComInvoice?                    @relation(fields: [comInvoiceId], references: [id])
  ComMerchant                     ComMerchant                    @relation(fields: [comMerchantId], references: [id])
  ComPaymentMode                  ComPaymentMode?                @relation(fields: [comPaymentModeId], references: [id])
  ComRechargeOrderCancelReason    ComRechargeOrderCancelReason?  @relation(fields: [comRechargeOrderCancelReasonId], references: [id])
  ComRechargeOrderReleaseReason   ComRechargeOrderReleaseReason? @relation(fields: [comRechargeOrderReleaseReasonId], references: [id])

  @@index([usrOrganizationId], map: "idx_belem_organizationid_new")
  @@index([externalOrganization, externalTransaction, externalSequence], map: "idx_external_rechargeordermt_new")
  @@schema("commerce")
}

model MedMediaProductRecharge_new {
  id                                    Int                          @id @default(autoincrement())
  medMediaProductId                     Int?
  releaseDate                           DateTime?
  type                                  RechargeType
  rsn                                   Int
  isProcessed                           Boolean                      @default(false)
  rechargeToken                         String?
  rechargeDate                          DateTime?
  isRecharged                           Boolean                      @default(false)
  blameUser                             String
  createdAt                             DateTime                     @default(now())
  updatedAt                             DateTime
  comRechargeOrderDetailId              Int?                         @unique
  isActive                              Boolean                      @default(true)
  isTransfer                            Boolean                      @default(false)
  medMediaProductRechargeTransferFromId Int?                         @unique(map: "MedMediaProductRecharge_new_medMediaProductRechargeTransferFrom")
  medMediaTransferId                    Int?
  samCsn                                String?
  signature                             String?
  value                                 Int                          @default(0)
  usrOrganizationId                     Int?
  csn                                   BigInt?
  externalId                            Int?
  medTransitProductCode                 Int?
  toIssuerCode                          Int?
  toSysCode                             Int?
  creditSerie                           Int?
  dvcThingThingName                     String?
  toTerminalCode                        Int?
  toTransportOperatorId                 Int?
  statusDate                            DateTime?
  liveDate                              DateTime?
  hotlistCompleteId                     Int?
  confirmationSequence                  Int?
  rechargeReason                        String?
  wasMigrated                           Boolean?                     @default(false)
  pursebalancea                         Int?
  pursebalanceb                         Int?
  pursedatea                            DateTime?
  pursedateb                            DateTime?
  purseseriea                           Int?
  purseserieb                           Int?
  tsn                                   Int?
  MedMediaProduct                       MedMediaProduct?             @relation(fields: [medMediaProductId], references: [id], onDelete: Cascade)
  MedMediaProductRecharge_new           MedMediaProductRecharge_new? @relation("MedMediaProductRecharge_newToMedMediaProductRecharge_new", fields: [medMediaProductRechargeTransferFromId], references: [id], onDelete: Cascade, map: "MedMediaProductRecharge_new_medMediaProductRechargeTransferFro_")
  other_MedMediaProductRecharge_new     MedMediaProductRecharge_new? @relation("MedMediaProductRecharge_newToMedMediaProductRecharge_new")
  MedMediaTransfer                      MedMediaTransfer?            @relation(fields: [medMediaTransferId], references: [id])

  @@unique([csn, rsn, medTransitProductCode, toIssuerCode], map: "MedMediaProductRecharge_new_csn_rsn_medTransitProductCode_toIss")
  @@unique([externalId, toSysCode])
  @@index([confirmationSequence])
  @@index([medMediaProductId])
  @@index([medTransitProductCode, csn, toIssuerCode, createdAt, isRecharged], map: "MedMediaProductRecharge_new_medTransitProductCode_csn_toIssuerC")
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwDomainProduct {
  type         String?
  subType      Int?
  description  String?
  code         Int?
  toIssuerCode Int?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwDomainMedQuota {
  id       Int?
  isLegacy Boolean?

  @@ignore
  @@schema("user")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwDomainToSystem {
  toSysCode   Int?
  description String?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwDomainUsrOperator {
  usrOperatorId Int?
  usrUserId     Int?
  name          String?
  socialName    String?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwDomainMediaProduct {
  id                      BigInt?
  medMediaId              Int?
  medMediaCsn             BigInt?
  medMediaProductId       Int?
  medTransitProductId     Int?
  medTransitProductDesc   String?
  medTransitProductCode   Int?
  toIssuerCode            Int?
  quotaLimit              Decimal[] @db.Decimal
  medMediaFormatedLogical String?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwDomainToIssuer {
  code Int?
  name String?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ComVwVoucherByTerminal {
  id                    BigInt?
  total                 BigInt?
  toTerminalCode        Int?
  toTransportOperatorId Int?
  voucherType           ComVoucherType?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ComVwVoucherByMonth {
  id    BigInt?
  total BigInt?
  month DateTime? @db.Date

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ComVwVoucherByDay {
  id    BigInt?
  total BigInt?
  day   DateTime? @db.Date

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwDomainToTerminal {
  toTerminalCode          Int?
  toTransportOperatorId   Int?
  toTerminalGroupId       Int?
  description             String?
  toTransportOperatorDesc String?
  stationId               Int?
  station                 String?
  lineId                  Int?
  line                    String?
  companyId               Int?
  company                 String?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ComVwMerchantSummary {
  date                             DateTime? @db.Date
  toIssuerCode                     Int?
  toIssuerName                     String?
  comMerchantId                    Int?
  receivedQrCodeSale               BigInt?
  transactionQrCodeSale            BigInt?
  receivedQrCodeSaleCancel         BigInt?
  transactionQrCodeSaleCancel      BigInt?
  transactionMediaSaleCancel       BigInt?
  receivedMediaSaleCancel          BigInt?
  transactionMediaSale             BigInt?
  receivedMediaSale                BigInt?
  transactionMediaRechargePurchase BigInt?
  receivedMediaRechargePurchase    BigInt?
  transactionMediaTopup            BigInt?
  receivedMediaTopup               BigInt?
  credit                           BigInt?
  debit                            BigInt?
  cash                             BigInt?
  voucher                          BigInt?
  countQrCodeSale                  BigInt?
  countQrCodeSaleCancel            BigInt?
  countMediaSaleCancel             BigInt?
  countMediaSale                   BigInt?
  countMediaRechargePurchase       BigInt?
  countMediaTopup                  BigInt?
  errorCount                       BigInt?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ComVwRevenueByMediaType {
  id            BigInt?
  type          MediaType?
  comMerchant   String?
  comMerchantId Int?
  date          DateTime?  @db.Date
  amount        BigInt?
  received      BigInt?
  count         BigInt?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ComVwRevenueByPayment {
  id            BigInt?
  paymentMethod PaymentMethod?
  comMerchant   String?
  comMerchantId Int?
  date          DateTime?      @db.Date
  amount        BigInt?
  received      BigInt?
  count         BigInt?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ComVwRevenueByMediaXOperation {
  id            BigInt?
  mediaType     MediaType?
  operationType OperationType?
  comMerchant   String?
  comMerchantId Int?
  date          DateTime?      @db.Date
  amount        BigInt?
  received      BigInt?
  count         BigInt?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ComVwRevenueByProduct {
  id               BigInt?
  type             MediaType?
  subType          Int?
  product          String?
  collectorGroupId Int?
  collectorGroup   String?
  comMerchant      String?
  comMerchantId    Int?
  date             DateTime?  @db.Date
  amount           BigInt?
  received         BigInt?
  count            BigInt?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ComVwRevenueByIssuer {
  id            BigInt?
  comMerchantId Int?
  comMerchant   String?
  toIssuerCode  Int?
  toIssuer      String?
  date          DateTime? @db.Date
  amount        BigInt?
  received      BigInt?
  count         BigInt?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ComVwLastOrders {
  id                 Int?
  medMediaProductId  Int?
  value              Int?
  rechargeDate       DateTime?
  releaseDate        DateTime?
  isActive           Boolean?
  isProcessed        Boolean?
  isPaid             Boolean?
  isCompleted        Boolean?
  isWaitingPayment   Boolean?
  paymentObservation String?
  paymentType        PaymentType?
  paymentDate        DateTime?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwDomainUsrOrganization {
  usrOrganizationId     Int?
  name                  String?
  shortName             String?
  mailAddress           String?
  paymentSecret         String?
  mainDocument          String?
  mainPhoneCountryCode  Int?
  mainPhoneNumber       String?
  mainAddressStreet     String?
  mainAddressNumber     String?
  mainAddressComplement String?
  mainAddressZipCode    String?
  mainAddressCity       String?
  mainAddressDistrict   String?
  mainAddressState      String?
  mainAddressCountry    String?
  isActive              Boolean?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwMedMediaReloadPeriod {
  csn                              BigInt?
  medTransitProductCode            Int?
  medTransitProduct                String?
  toIssuerCode                     Int?
  type                             media_ReloadPeriodType?
  startDate                        DateTime?               @db.Date
  endDate                          DateTime?               @db.Date
  rechargeCount                    BigInt?
  rechargeValue                    BigInt?
  hasReloadPeriod                  Boolean?
  maxReloadPeriodRechargeCount     Int?
  maxReloadPeriodRechargeValue     Int?
  maxReloadPeriodTypeRechargeValue BigInt?
  periodYear                       Decimal?                @db.Decimal
  periodId                         Int?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwDomainMedMediaProduct {
  medMediaId           Int?
  usrUserId            Int?
  isMediaActive        Boolean?
  medMediaProductId    Int?
  medTransitProductId  Int?
  endValidity          DateTime?
  isMediaProductActive Boolean?
  usn                  Int?

  @@ignore
  @@schema("user")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwProductHistory {
  model             String?
  id                Int?
  medMediaProductId Int?
  updateDate        DateTime?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwProductHotlistConfirmedByDay {
  total BigInt?
  day   DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwProductHotlistSentByDay {
  total BigInt?
  day   DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwProductHotlistSentByMonth {
  total BigInt?
  month DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwProductHotlistByProduct {
  total   BigInt?
  product String?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwHotlistByReason {
  total  BigInt?
  reason String?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwHotlistConfirmedByDay {
  total BigInt?
  day   DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwHotlistConfirmedByMonth {
  total BigInt?
  month DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwHotlistSentByDay {
  total BigInt?
  day   DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwHotlistSentByMonth {
  total BigInt?
  month DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwProductRechargeSentByDay {
  total BigInt?
  day   DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwProductRechargeSentByMonth {
  total BigInt?
  month DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwProductRechargeConfirmedByMonth {
  total BigInt?
  month DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwProductRechargeConfirmedByDay {
  total BigInt?
  day   DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwProductRechargeByProduct {
  total   BigInt?
  product String?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwProductRecharge {
  id                                    Int?
  medMediaProductId                     Int?
  releaseDate                           DateTime?
  type                                  RechargeType?
  rsn                                   Int?
  isProcessed                           Boolean?
  rechargeToken                         String?
  rechargeDate                          DateTime?
  isRecharged                           Boolean?
  blameUser                             String?
  createdAt                             DateTime?
  updatedAt                             DateTime?
  comRechargeOrderDetailId              Int?
  isActive                              Boolean?
  isTransfer                            Boolean?
  medMediaProductRechargeTransferFromId Int?
  medMediaTransferId                    Int?
  samCsn                                String?
  signature                             String?
  value                                 Int?
  usrOrganizationId                     Int?
  csn                                   BigInt?
  externalId                            Int?
  medTransitProductCode                 Int?
  toIssuerCode                          Int?
  toSysCode                             Int?
  creditSerie                           Int?
  dvcThingThingName                     String?
  toTerminalCode                        Int?
  toTransportOperatorId                 Int?
  statusDate                            DateTime?
  liveDate                              DateTime?
  hotlistCompleteId                     Int?
  confirmationSequence                  Int?
  rechargeReason                        String?
  wasMigrated                           Boolean?
  pursebalancea                         Int?
  pursebalanceb                         Int?
  pursedatea                            DateTime?
  pursedateb                            DateTime?
  purseseriea                           Int?
  purseserieb                           Int?
  tsn                                   Int?
  medMediaId                            Int?
  medTransitProductId                   Int?
  description                           String?
  formatedLogical                       String?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwStatementHeader {
  unique                  BigInt?
  mediaId                 Int?
  createdAt               DateTime?
  blameUser               String?
  medMediaTypeDescription String?
  document                String?
  formatedLogical         String?
  usrName                 String?
  usrSocialName           String?
  usrTypes                String?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwStatementRecharges {
  productRechargeId         Int?
  medMediaProductId         Int?
  usrOrganizationId         Int?
  releaseDate               DateTime?
  type                      RechargeType?
  rsn                       Int?
  value                     Float?
  mediaId                   Int?
  isProcessed               Boolean?
  isRecharged               Boolean?
  isActive                  Boolean?
  isTransfer                Boolean?
  operatorName              String?
  toTerminalCode            Int?
  toTransportOperatorId     Int?
  tramportOperatorName      String?
  terminalDescription       String?
  medTransitProductId       Int?
  orderNumber               String?
  organizationName          String?
  transitProductCode        Int?
  transitProductDescription String?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwStatementTransactions {
  unique                    BigInt?
  transactionId             Int?
  mediaProductId            Int?
  transactionDate           DateTime?
  terminal                  Int?
  balance                   Float?
  tsn                       Int?
  rsn                       Int?
  mediaId                   Int?
  formatedLogical           String?
  value                     Float?
  operator                  String?
  transactionMode           TransactionMode?
  transactionModeDesc       String?
  transactionType           TransactionAccountType?
  transactionTypeDesc       String?
  tranDesc                  String?
  purseTransactionMode      PurseTransactionMode?
  tktRejectId               Int?
  tktUsageId                Int?
  lineDescription           String?
  transitProductCode        Int?
  transitProductDescription String?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwLastUsages {
  medMediaTransactionId          Int?
  medMediaProductId              Int?
  formatedLogical                String?
  csn                            String?
  balance                        Int?
  currentBalance                 Int?
  value                          String?
  medMediaTypeDescription        String?
  medMediaId                     Int?
  medMediaProductDescription     String?
  transactionDate                DateTime?
  transactionType                TransactionAccountType?
  transactionMode                TransactionMode?
  toTerminalId                   Int?
  toTerminalGroupDescription     String?
  toLineId                       Int?
  toLineDescription              String?
  shortDesc                      String?
  toTransportOperatorId          Int?
  toTransportOperatorDescription String?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwLastTransactions {
  mediaId                        Int?
  formatedLogical                String?
  csn                            BigInt?
  isActive                       Boolean?
  mediaProductId                 Int?
  mediaProductState              Int?
  mediaTransactionId             Int?
  balance                        Int?
  mediaTransitProductDescription String?
  mediaTransitProductCode        Int?
  maxValue                       Int?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwMediasAndUser {
  id                Int?
  sequence          Int?
  checkDig          Int?
  formatedLogical   String?
  toIssuerCode      Int?
  isProcessed       Boolean?
  csn               BigInt?
  isActive          Boolean?
  medMediaTypeId    Int?
  blameUserMedMedia String?
  createdAt         DateTime?
  updatedAt         DateTime?
  usrUserId         Int?
  bss_id            Int?
  reissueSequence   Int?
  recordDate        DateTime?
  birthdate         DateTime? @db.Date
  name              String?
  socialName        String?
  mediaDescription  String?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwDomainUsrUser {
  usrUserId    Int?
  externalId   Int?
  mainDocument String?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwDomainToLineExternal {
  toSysCode  Int?
  externalId Int?
  toLineId   Int?

  @@ignore
  @@schema("media")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwUserInfoWithMedMedia {
  usrUserId                  Int?
  usrDocumentTypeId          Int?
  usrDocumentId              Int?
  birthdate                  DateTime? @db.Date
  usrDocumentTypeDescription String?
  usrDocumentValue           String?
  formatedLogical            String?
  mediaIsActive              Boolean?
  mediaIsHotlisted           Boolean?
  mediaIsProcessed           Boolean?
  mediaId                    Int?

  @@ignore
  @@schema("user")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view VwDomainMedia {
  medMediaId              Int?
  medMediaCsn             BigInt?
  medMediaFormatedLogical String?
  medMediaIsProcessed     Boolean?
  medMediaUsrUserId       Int?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view ComVwTransaction {
  comTransactionId      Int?
  comTransactionGuid    String?
  comMerchantId         Int?
  comMerchant           String?
  date                  DateTime?      @db.Date
  datetime              DateTime?
  toTerminalCode        Int?
  toTerminalGroupId     Int?
  toTransportOperatorId Int?
  toTerminal            String?
  operationType         OperationType?
  type                  MediaType?
  subType               Int?
  comissionType         CommisionType?
  comissionTypeValue    Int?
  subTypeDesc           String?
  mediaId               String?
  externalMediaId       String?
  media                 String?
  comPaymentModeId      Int?
  comPaymentMode        String?
  value                 Int?
  receivedValue         Int?
  comission             Int?
  isProcessed           Boolean?
  isPaymentComplete     Boolean?
  isActive              Boolean?

  @@ignore
  @@schema("commerce")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view MedVwProductHotlistConfirmedByMonth {
  total BigInt?
  month DateTime? @db.Timestamp(6)

  @@ignore
  @@schema("media")
}

enum FileType {
  employee
  order

  @@schema("salesportal")
}

enum OrderType {
  manual
  import

  @@schema("salesportal")
}

enum OrderStatus {
  new
  paid
  released
  canceled
  inconsistent
  incomplete
  migrated

  @@schema("salesportal")
}

enum PaymentMode {
  billet
  pix

  @@schema("salesportal")
}

enum Gender {
  male
  female
  other

  @@schema("user")
}

enum PhoneType {
  residential
  business
  celphone

  @@schema("user")
}

enum PhoneChannel {
  sms
  whatsapp
  telegram

  @@schema("user")
}

enum AddressType {
  residential
  business
  mailing
  temporary

  @@schema("user")
}

enum UserBaseType {
  regular
  employee
  student
  disability
  elderly
  operator
  abt

  @@schema("user")
}

enum OrganizationType {
  company
  school

  @@schema("user")
}

enum PhotoType {
  site
  mobile
  external

  @@schema("user")
}

enum DocumentRole {
  user
  organization

  @@schema("user")
}

enum ApprovalType {
  waiting
  approved
  unapproved

  @@schema("user")
}

enum MigrationType {
  organization
  user
  userPhoto

  @@schema("user")
}

enum ComVoucherType {
  auto
  manual

  @@schema("commerce")
}

enum CommerceChannelType {
  sptrans

  @@schema("commerce")
}

enum CommisionType {
  percentage
  value

  @@schema("commerce")
}

enum FlowType {
  credit
  debit

  @@schema("commerce")
}

enum commerce_Gender {
  male
  female
  other

  @@map("Gender")
  @@schema("commerce")
}

enum MediaType {
  qrcode
  media
  abt
  externalMedia

  @@schema("commerce")
}

enum MerchantType {
  gateway
  operator

  @@schema("commerce")
}

enum OperationType {
  sale
  topup
  salecancel
  rechargePurchase
  manualAdjustDebit
  manualAdjustCredit

  @@schema("commerce")
}

enum commerce_OperationalTag {
  current
  main
  alt

  @@map("OperationalTag")
  @@schema("commerce")
}

enum PaymentMethod {
  cash
  debit
  credit
  voucher
  pix
  other

  @@schema("commerce")
}

enum PaymentModeRuleType {
  time
  value

  @@schema("commerce")
}

enum PaymentOrderLogType {
  request
  webhook

  @@schema("commerce")
}

enum PaymentOrderStatus {
  pending
  approved
  cancelled
  expired
  refunded

  @@schema("commerce")
}

enum PaymentType {
  backend
  billet
  integration
  pix

  @@schema("commerce")
}

enum RechargeOrderTaxType {
  service
  subscription

  @@schema("commerce")
}

enum RechargeOrderType {
  merchantOrder
  organizationOrder
  transfer

  @@schema("commerce")
}

enum RechargeRuleType {
  mediaAuto
  mediaExists

  @@schema("commerce")
}

enum commerce_ReloadPeriodType {
  product
  line
  quota

  @@map("ReloadPeriodType")
  @@schema("commerce")
}

enum ServiceCloseType {
  operator
  backend
  scheduled

  @@schema("commerce")
}

enum Weekday {
  sunday
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  holiday

  @@schema("commerce")
}

enum FareGraceType {
  none
  period
  always

  @@schema("media")
}

enum FieldType {
  startValidity
  endValidity
  useLimitRole
  timegroup
  transportOperatorId
  opRole
  hrid
  tpGroup
  lineMask
  lineGroup1
  lineGroup2
  lineGroup3
  lineGroup4
  providerId
  isDisabled
  line1
  line2
  line3
  line4
  updateAt
  limitUsage
  limitType
  usrOperatorId

  @@schema("media")
}

enum FileDirection {
  input
  output

  @@schema("media")
}

enum media_FileType {
  file
  confirmation

  @@map("FileType")
  @@schema("media")
}

enum HotlistAction {
  block
  unblock
  permanent

  @@schema("media")
}

enum LimitType {
  day
  week
  month
  year
  biweekly
  hour
  mounth

  @@schema("media")
}

enum LineDirection {
  inbound
  outbound

  @@schema("media")
}

enum LinkStatus {
  unlinked
  linked
  error

  @@schema("media")
}

enum MedListType {
  product_update
  media_hotlist
  product_hotlist
  recharge
  external_hotlist

  @@schema("media")
}

enum media_MigrationType {
  media

  @@map("MigrationType")
  @@schema("media")
}

enum media_OperationalTag {
  current
  main
  alt

  @@map("OperationalTag")
  @@schema("media")
}

enum PersoCommandType {
  sendCmd
  write

  @@schema("media")
}

enum PersoFileType {
  cpoRequest
  cpoData
  cpoConfirm
  cpoLinkErrors

  @@schema("media")
}

enum media_PersoOrderType {
  bureau
  external
  single

  @@map("PersoOrderType")
  @@schema("media")
}

enum ProductHistoryModel {
  medMediaProductUpdate
  medProductHotlist

  @@schema("media")
}

enum ProductKeyType {
  default
  keyLegacy01
  keyLegacy02
  keyLegacy03

  @@schema("media")
}

enum PurseTransactionMode {
  singlePurse
  doublePurse

  @@schema("media")
}

enum QuotaType {
  monthly
  line

  @@schema("media")
}

enum RechargeType {
  regular
  fulfill

  @@schema("media")
}

enum media_ReloadPeriodType {
  product
  line
  quota

  @@map("ReloadPeriodType")
  @@schema("media")
}

enum TagType {
  mifareClassic
  mifareSL1
  mifareSL3
  mifare2GO

  @@schema("media")
}

enum TransactionAccountType {
  credit
  debit

  @@schema("media")
}

enum TransactionMode {
  usage
  recharge
  sale
  creditTransfer
  manualAdjust

  @@schema("media")
}

enum TransitProductType {
  globalCounter
  mediaInfo
  value
  period
  periodOperator
  periodHandicapped
  lastUse
  mediaInfoExtended
  operator
  opservice
  opsummary
  opCounter
  externalSystem
  periodAttendant
  trip
  tripStudent

  @@schema("media")
}

enum WeekDefinition {
  sunday
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  holiday

  @@schema("media")
}

enum salesportal_Gender {
  male
  female
  other

  @@map("Gender")
  @@schema("salesportal")
}

enum ComTaxType {
  secondCopy
  delivery

  @@schema("commerce")
}

enum MaritalStatus {
  single
  married
  divorced
  widowed
  commonLawMarriage

  @@schema("user")
}
